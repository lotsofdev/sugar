{
    "map": {},
    "generated": {
        "map": {
            "@lotsof.sugar.shared.url.urlFromString": {
                "id": "@lotsof.sugar.shared.url.urlFromString",
                "name": "urlFromString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Simple function that take a string as parameter and returns you a valid\nurl ready one",
                "namespace": "@lotsof.sugar.shared.url",
                "status": "stable",
                "snippet": {
                    "label": "__urlFromString($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __urlFromString } from '@lotsof/sugar/url';\n__urlFromString('Sir James Paul McCartney MBE is an English singer-songwriter');\n// sir-james-paul-mc-cartney-mbe-is-an-english-singer-songwriter"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "urlFromString.ts",
                "extension": "ts",
                "relPath": "src/shared/url/urlFromString.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.url.queryStringToObject": {
                "id": "@lotsof.sugar.shared.url.queryStringToObject",
                "name": "queryStringToObject",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "queryString": {
                        "name": "queryString",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The query string to process",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "The object representation of the query string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Transform a query string into his object (key => pairs) representation",
                "namespace": "@lotsof.sugar.shared.url",
                "status": "stable",
                "snippet": {
                    "label": "__queryStringToObject($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __queryStringToObject } from '@coffeekraken/sugar/url'\n__queryStringToObject('?var1=value1&var2=value2') // { var1: 'value1', var2: 'value2' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "queryStringToObject.ts",
                "extension": "ts",
                "relPath": "src/shared/url/queryStringToObject.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.url.gravatarUrl": {
                "id": "@lotsof.sugar.shared.url.gravatarUrl",
                "name": "gravatarUrl",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "email": {
                        "name": "email",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The user email",
                        "defaultStr": ""
                    },
                    "size": {
                        "name": "size",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The wanted image size. From 1 to 2048",
                        "default": 200,
                        "defaultStr": "200"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The generated gravatar url"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return a gravatar url depending on the passed user email and size",
                "namespace": "@lotsof.sugar.shared.url",
                "status": "stable",
                "snippet": {
                    "label": "__gravatarUrl($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __gravatarUrl } from '@lotsof/sugar/url';\n__gravatarUrl('olivier.bossel@gmail.com'); // https://www.gravatar.com/avatar/b5df60055b6287bb7c90c0078ce20a5f"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "gravatarUrl.ts",
                "extension": "ts",
                "relPath": "src/shared/url/gravatarUrl.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.upperFirst": {
                "id": "@lotsof.sugar.shared.string.upperFirst",
                "name": "upperFirst",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The processed string with first letter uppercase"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Upper first",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__upperFirst($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __upperFirst } from '@coffeekraken/sugar/string'\n__upperFirst('hello world') // Hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "upperFirst.ts",
                "extension": "ts",
                "relPath": "src/shared/string/upperFirst.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.unquote": {
                "id": "@lotsof.sugar.shared.string.unquote",
                "name": "unquote",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    },
                    "quotesToRemove": {
                        "name": "quotesToRemove",
                        "type": {
                            "types": [
                                {
                                    "type": "Array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "Array<String>"
                        },
                        "description": "The quotes to removes",
                        "default": [
                            "\"",
                            "'",
                            "”",
                            "`"
                        ],
                        "defaultStr": "['\"','\\'','”','`']"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The unquoted string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Remove the quotes of a string\nTypes of quotes removed :\n- `\"`, `'`, `”`, '`'",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__unquote($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __unquote } from '@coffeekraken/sugar/string'\n__unquote(\"'Hello world'\") // \"Hello world\""
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "unquote.ts",
                "extension": "ts",
                "relPath": "src/shared/string/unquote.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.uncamelize": {
                "id": "@lotsof.sugar.shared.string.uncamelize",
                "name": "uncamelize",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to uncamelize",
                        "defaultStr": ""
                    },
                    "separator": {
                        "name": "separator",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The separator to use",
                        "default": "-",
                        "defaultStr": "'-'"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The uncamelized string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Uncamelize a string",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__uncamelize($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __uncamelize } from '@coffeekraken/sugar/string'\n__uncamelize('helloWorldAndUniverse') // hello-world-and-universe"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "uncamelize.ts",
                "extension": "ts",
                "relPath": "src/shared/string/uncamelize.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.trimLines": {
                "id": "@lotsof.sugar.shared.string.trimLines",
                "name": "trimLines",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to trim lines of",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object settings. Here's the object properties:",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The processed string"
                },
                "setting": {
                    "leftPadding": {
                        "name": "leftPadding",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "Specify a left padding to set. 1 padding represent 1 space character",
                        "default": 0,
                        "defaultStr": "0"
                    },
                    "rightPadding": {
                        "name": "rightPadding",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "Specify a right padding to set.",
                        "default": 0,
                        "defaultStr": "0"
                    },
                    "keepEmptyLines": {
                        "name": "keepEmptyLines",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to keep empty lines or not",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string and trim each lines",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__trimLines($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __trimLines } from '@lotsof/sugar/string';\n__trimLines(`my cool lines\n     that have some lines to trim\nand some not...`);\n// my cool lines\n// that have some lines to trim\n// and some not..."
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "trimLines.ts",
                "extension": "ts",
                "relPath": "src/shared/string/trimLines.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.trainCase": {
                "id": "@lotsof.sugar.shared.string.trainCase",
                "name": "trainCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to snakeCase",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The snakeCased string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Train case a string",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__trainCase($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __trainCase } from '@lotsof/sugar/string';\n__trainCase('hello world'); // => Hello-World"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "trainCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/trainCase.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.stripSourcemap": {
                "id": "@lotsof.sugar.shared.string.stripSourcemap",
                "name": "stripSourcemap",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "str": {
                        "name": "str",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The processed string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a string and get rid of all sourcemap",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__stripSourcemap($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __stripSourcemap } from '@lotsof/sugar/string';\n__stripSourcemap('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "stripSourcemap.ts",
                "extension": "ts",
                "relPath": "src/shared/string/stripSourcemap.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.stripDocblocks": {
                "id": "@lotsof.sugar.shared.string.stripDocblocks",
                "name": "stripDocblocks",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "str": {
                        "name": "str",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The processed string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a string and get rid of all docblocks",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__stripDocblocks($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __stripDocblocks } from '@lotsof/sugar/string';\n__stripDocblocks('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "stripDocblocks.ts",
                "extension": "ts",
                "relPath": "src/shared/string/stripDocblocks.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.stripAnsi": {
                "id": "@lotsof.sugar.shared.string.stripAnsi",
                "name": "stripAnsi",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to strip ansi from",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The new string without any ansi characters"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply strip all the ansi characters in a string",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__stripAnsi($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __stripAnsi } from '@lotsof/sugar/string';\n__stripAnsi('\\u001B]8;;https://github.com\\u0007Click\\u001B]8;;\\u0007'); // => Click"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "stripAnsi.ts",
                "extension": "ts",
                "relPath": "src/shared/string/stripAnsi.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.sprintf": {
                "id": "@lotsof.sugar.shared.string.sprintf",
                "name": "sprintf",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "format": {
                        "name": "format",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The format of the string wanted as output",
                        "defaultStr": ""
                    },
                    "...replacements": {
                        "name": "...replacements",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The replacement tokens to apply to the string",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The processed string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Javascript implementation of the sprintf php function.\n>For more infos, check [this github repository](https://github.com/alexei/sprintf.js)",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__sprintf($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __sprintf } from '@coffeekraken/sugar/string'\n__sprintf('Hello %s', 'world') // Hello World\nconst user = { name: 'Dolly' }\n__sprintf('Hello %(name)s', user) // Hello Dolly"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sprintf.ts",
                "extension": "ts",
                "relPath": "src/shared/string/sprintf.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.splitEvery": {
                "id": "@lotsof.sugar.shared.string.splitEvery",
                "name": "splitEvery",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The text to split",
                        "defaultStr": ""
                    },
                    "every": {
                        "name": "every",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "How many characters to split the text",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial<ISplitEverySettings"
                                }
                            ],
                            "raw": "Partial<ISplitEverySettings"
                        },
                        "description": "Some settings to configure your split process",
                        "default": [],
                        "defaultStr": "[]"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array"
                            }
                        ],
                        "raw": "Array"
                    },
                    "description": "An array of the splited text parts"
                },
                "setting": {
                    "splitWords": {
                        "name": "splitWords",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If you want to split the words or not...",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Split a string every n chars either by taking care of not spliting the words, or by simply spliting without any attention to that...",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__splitEvery($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __splitEvery } from '@lotsof/sugar/string';\n__splitEvery('Hello World', 2, {\n   splitWords: true\n}); // => ['He','ll','o ','Wo','rl','d']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "splitEvery.ts",
                "extension": "ts",
                "relPath": "src/shared/string/splitEvery.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.snakeCase": {
                "id": "@lotsof.sugar.shared.string.snakeCase",
                "name": "snakeCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to snakeCase",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The snakeCased string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Snake case a string",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__snakeCase($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __snakeCase } from '@lotsof/sugar/string';\n__snakeCase('hello world'); // => HELLO WORLD"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "snakeCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/snakeCase.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.simplifySpecialChars": {
                "id": "@lotsof.sugar.shared.string.simplifySpecialChars",
                "name": "simplifySpecialChars",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "str": {
                        "name": "str",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The processed string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string and replace all the special chars like \"é\", \"à\", etc...\nwith their simple version like \"a\", \"e\", etc...",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__simplifySpecialChars($1)"
                },
                "example": [
                    {
                        "language": "php",
                        "code": "import { __simplifySpecialChars } from '@lotsof/sugar/string';\n__simplifySpecialChars('É'); // E"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "simplifySpecialChars.ts",
                "extension": "ts",
                "relPath": "src/shared/string/simplifySpecialChars.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.simply": {
                "id": "@lotsof.sugar.shared.string.simply",
                "name": "simply",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to simplyfy",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to simplify your string as you want:",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The simplified string"
                },
                "setting": {
                    "specialChars": {
                        "name": "specialChars",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to get rid of the special chars like é, è, etc...",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "lowerCase": {
                        "name": "lowerCase",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want your returned string to be lowercased",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "dashSpace": {
                        "name": "dashSpace",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to replace the \"_|-\" by a space",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "[trim=true}": {
                        "name": "[trim=true}",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want your string to be trimed or not",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string with accents, etc and convert it to a more simply\nversion like \"éàddö\" to \"eaddo\"",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__simplify($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __simplify } from '@lotsof/sugar/string';\n__simplify('éàddö'); // => eaddo"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "João Filipe Ventura Coelho",
                    "email": "joaoventura93@outlook.com"
                },
                "filename": "simplify.ts",
                "extension": "ts",
                "relPath": "src/shared/string/simplify.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.sentenceCase": {
                "id": "@lotsof.sugar.shared.string.sentenceCase",
                "name": "sentenceCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to snakeCase",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The snakeCased string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Sentence case a string",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__sentenceCase($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __sentenceCase } from '@lotsof/sugar/string';\n__sentenceCase('hello world'); // => Hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sentenceCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/sentenceCase.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.rtrim": {
                "id": "@lotsof.sugar.shared.string.rtrim",
                "name": "rtrim",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to trim",
                        "defaultStr": ""
                    },
                    "needle": {
                        "name": "needle",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to find an cut out if found",
                        "defaultStr": ""
                    },
                    "trimResult": {
                        "name": "trimResult",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to trim the trimed string",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The trimed string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Trim right a specified string",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__rtrim($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __rtrim } from '@coffeekraken/sugar/string'\n__rtrim('Hello World', 'ld') // Hello Wor"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "rtrim.ts",
                "extension": "ts",
                "relPath": "src/shared/string/rtrim.ts",
                "children": {}
            },
            "@lotsof.sugar.js.string.replaceTokens": {
                "id": "@lotsof.sugar.js.string.replaceTokens",
                "name": "replaceTokens",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    },
                    "argsObj": {
                        "name": "argsObj",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The arguments/value object",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "A settings object to configure the parsing process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The processed string"
                },
                "setting": {
                    "[regexp=\\[([a-zA-Z0-9-_]+)\\] The regexp to use to match the tokens": {
                        "name": "[regexp=\\[([a-zA-Z0-9-_]+)\\] The regexp to use to match the tokens",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "null",
                        "defaultStr": ""
                    },
                    "stripUndefined": {
                        "name": "stripUndefined",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to strip the tokens that are not found in the argsObj",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function takes as parameter a tokened string like \"something [cool]\", an object\nof arguments/values and return the processed string with the tokens replaced by the arguments values.",
                "namespace": "@lotsof.sugar.js.string",
                "status": "stable",
                "snippet": {
                    "label": "(string) __replaceTokens($1, $2)",
                    "code": "__replaceTokens($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __replaceTokens } from '@lotsof/sugar/string';\n__replaceTokens('hello [world]', { world: 'Coco' }); // => hello Coco"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "replaceTokens.ts",
                "extension": "ts",
                "relPath": "src/shared/string/replaceTokens.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.replaceChunks": {
                "id": "@lotsof.sugar.shared.string.replaceChunks",
                "name": "replaceChunks",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    },
                    "chunks": {
                        "name": "chunks",
                        "type": {
                            "types": [
                                {
                                    "type": "array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String[]"
                        },
                        "description": "The chunks to replace",
                        "defaultStr": ""
                    },
                    "replacer": {
                        "name": "replacer",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The replacer function that need to return a string with which you want to replace the token",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The new string with replaced chunks"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Replace the passed \"chunks\" with the result of the passed replacer function.\nThe replacer function take as argument the token value",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__replaceChunks($1, [$2], $3)",
                    "code": "_replaceChunks($1, [$2], (token) => {\n     return $3;\n});"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __replaceChunks } from '@coffeekraken/sugar/string'\n__replaceChunks('hello world', ['or'], (token) => {\n     return `<span>${token}</span>;\n}) // Hello w<span>or</span>ld"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "replaceChunks.ts",
                "extension": "ts",
                "relPath": "src/shared/string/replaceChunks.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.printf": {
                "id": "@lotsof.sugar.shared.string.printf",
                "name": "printf",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "source": {
                        "name": "source",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The source in which to replace the tokens",
                        "defaultStr": ""
                    },
                    "values...": {
                        "name": "values...",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "Any number of arguments to replace the placeholders in the string",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The resulting string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "printf php equavalent",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__printf($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __printf } from '@lotsof/sugar/string';\n__printf('Hello %s', 'world'); // => Hello world\n__printf('Hello %s, I\\'m %s', 'world', 'John Doe'); // Hello world, I'm John Doe\n__printf('Hello %(first)s, I\\'m %(name)s', { first : 'world', name : 'John Doe'}); // Hello world, I'm John Doe"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "printf.ts",
                "extension": "ts",
                "relPath": "src/shared/string/printf.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.pathCase": {
                "id": "@lotsof.sugar.shared.string.pathCase",
                "name": "pathCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to snakeCase",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The snakeCased string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Path case a string",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__pathCase($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __pathCase } from '@lotsof/sugar/string';\n__pathCase('hello world'); // => hello/world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "pathCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/pathCase.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.pascalSnakeCase": {
                "id": "@lotsof.sugar.shared.string.pascalSnakeCase",
                "name": "pascalSnakeCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to snakeCase",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The snakeCased string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Pascal snake case a string",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__pascalSnakeCase($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __pascalSnakeCase } from '@lotsof/sugar/string';\n__pascalSnakeCase('hello world'); // => Hello_World"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "pascalSnakeCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/pascalSnakeCase.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.pascalCase": {
                "id": "@lotsof.sugar.shared.string.pascalCase",
                "name": "pascalCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to snakeCase",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The snakeCased string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Pascal case a string",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__pascalCase($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __pascalCase } from '@lotsof/sugar/string';\n__pascalCase('hello world'); // => HelloWorld"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "pascalCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/pascalCase.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.parse": {
                "id": "@lotsof.sugar.shared.string.parse",
                "name": "parse",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The value to convert",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Mixed"
                            }
                        ],
                        "raw": "Mixed"
                    },
                    "description": "The converted value"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse a string and convert it into his native data type like date, number, boolean, etc...",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__parse($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __parse } from '@lotsof/sugar/string';\n __parse('10'); // => 10"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parse.ts",
                "extension": "ts",
                "relPath": "src/shared/string/parse.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.paramCase": {
                "id": "@lotsof.sugar.shared.string.paramCase",
                "name": "paramCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to convert",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The converted string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function transform a string into a param case one like so \"something-cool\"",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__paramCase($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __paramCase } from '@lotsof/sugar/string';\n__paramCase('some thoing cool'); // => some-thing-cool"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "paramCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/paramCase.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.noCase": {
                "id": "@lotsof.sugar.shared.string.noCase",
                "name": "noCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to snakeCase",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The snakeCased string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "No case a string",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__noCase($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __noCase } from '@lotsof/sugar/string';\n__noCase('hello world'); // => hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "noCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/noCase.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.ltrim": {
                "id": "@lotsof.sugar.shared.string.ltrim",
                "name": "ltrim",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to trim",
                        "defaultStr": ""
                    },
                    "needle": {
                        "name": "needle",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to find an cut out if found",
                        "defaultStr": ""
                    },
                    "trimResult": {
                        "name": "trimResult",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If you want to trim the resulted ltrim",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The trimed string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Trim left a specified string",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__ltrim($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __ltrim } from '@coffeekraken/sugar/string'\n __ltrim('Hello World', 'Hello') // World"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ltrim.ts",
                "extension": "ts",
                "relPath": "src/shared/string/ltrim.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.lowerFirst": {
                "id": "@lotsof.sugar.shared.string.lowerFirst",
                "name": "lowerFirst",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to lower the first letter",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The string with the first letter lowered"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Lower first letter",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__lowerFirst($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __lowerFirst } from '@coffeekraken/sugar/string'\n__lowerFirst('Hello world') // hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "lowerFirst.ts",
                "extension": "ts",
                "relPath": "src/shared/string/lowerFirst.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.kebabCase": {
                "id": "@lotsof.sugar.shared.string.kebabCase",
                "name": "kebabCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to snakeCase",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The snakeCased string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Kebab case a string",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__kebabCase($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __kebabCase } from '@lotsof/sugar/string';\n__kebabCase('hello world'); // => Hello World"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "kebabCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/kebabCase.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.idCompliant": {
                "id": "@lotsof.sugar.shared.string.idCompliant",
                "name": "idCompliant",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The processed string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string and return a version of it that you can safely use\nin html id for example. It replace spaces with '-' as well as all the special characters\nwith their simple version like \"à\" will be replaces by \"a\"",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__idCompliant($1)"
                },
                "example": [
                    {
                        "language": "php",
                        "code": "import { __idCompliant } from '@lotsof/sugar/string';\n__idCompliant('Hello world'); // => hello-world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "idCompliant.ts",
                "extension": "ts",
                "relPath": "src/shared/string/idCompliant.ts",
                "children": {}
            },
            "@lotsof.sugar.js.string.format": {
                "id": "@lotsof.sugar.js.string.format",
                "name": "format",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to format",
                        "defaultStr": ""
                    },
                    "format": {
                        "name": "format",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The format to use",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The formatted value"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Format the passed string using the requested format. Available formats are:\n- isoDate",
                "namespace": "@lotsof.sugar.js.string",
                "status": "stable",
                "snippet": {
                    "label": "__format($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __format } from '@coffeekraken/sugar/string'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "format.ts",
                "extension": "ts",
                "relPath": "src/shared/string/format.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.extractSame": {
                "id": "@lotsof.sugar.shared.string.extractSame",
                "name": "extractSame",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string1": {
                        "name": "string1",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string 1 to compare",
                        "defaultStr": ""
                    },
                    "string2": {
                        "name": "string2",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string 2 to compare",
                        "defaultStr": ""
                    },
                    "multiple": {
                        "name": "multiple",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to get back multiple same string if exists as an array",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            },
                            {
                                "type": "Array"
                            }
                        ],
                        "raw": "String|Array"
                    },
                    "description": "The same string part(s) found"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function return you what has been find the same in the two passed string.\nIt will return you either an array of same string parts or a simple string\nrepresenting the first same part found.",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__extractSame($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __extractSame } from '@lotsof/sugar/string';\n__extractSame('Hello world', 'Hello plop'); // => 'Hello '"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "extractSame.ts",
                "extension": "ts",
                "relPath": "src/shared/string/extractSame.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.dotCase": {
                "id": "@lotsof.sugar.shared.string.dotCase",
                "name": "dotCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to snakeCase",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The snakeCased string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Capital case a string",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__dotCase($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __dotCase } from '@lotsof/sugar/string';\n__dotCase('hello world'); // => hello.world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "dotCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/dotCase.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.dashCase": {
                "id": "@lotsof.sugar.shared.string.dashCase",
                "name": "dashCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to dashCase",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The dashCased string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Dash case a string",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__dashCase($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __dashCase } from '@lotsof/sugar/string';\n__dashCase('hello world'); // => hello-world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "dashCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/dashCase.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.crop": {
                "id": "@lotsof.sugar.shared.string.crop",
                "name": "crop",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The text to crop",
                        "defaultStr": ""
                    },
                    "length": {
                        "name": "length",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The text length to have after the croping process",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings described bellow:",
                        "default": {},
                        "defaultStr": "{}",
                        "content": "- chars (...) {String}: The characters to use to signal the crop\n- splitWords (false) {Boolean}: Specify if you want to split words or not. If not, the function will make sure the final text does not exceeds the wanted length"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The cropped text"
                },
                "setting": {
                    "chars": {
                        "name": "chars",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The characters to use to signal the crop",
                        "default": "...",
                        "defaultStr": "..."
                    },
                    "splitWords": {
                        "name": "splitWords",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to split words or not. If not, the function will make sure the final text does not exceeds the wanted length",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Allows you to crop a string at a certain length (this length take care of the croping characters like \"...\")",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__crop($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __crop } from '@lotsof/sugar/string';\n__crop('Hello World', 10); // => Hello w..."
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "crop.ts",
                "extension": "ts",
                "relPath": "src/shared/string/crop.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.countLineChars": {
                "id": "@lotsof.sugar.shared.string.countLineChars",
                "name": "countLineChars",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "line": {
                        "name": "line",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The line to count",
                        "defaultStr": ""
                    },
                    "count": {
                        "name": "count",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Specify what you want to count outside of the normal characters of yourse. Here's the list of available options:",
                        "default": {},
                        "defaultStr": "{}",
                        "content": "- htmlTags (false) {Boolean}: Specify if you want to count the html tags or not\n- terminalSpecialChars (false) {Boolean}: Specify if you want to count the terminal specials chars like \"\\u001b[30m\", etc...\n- newLineChars (false) {Boolean}: Specify if you want to count the new line special char \"\\n\" or not"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "How many characters their is in the line"
                },
                "setting": {
                    "htmlTags": {
                        "name": "htmlTags",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to count the html tags or not",
                        "default": false,
                        "defaultStr": "false"
                    },
                    "terminalSpecialChars": {
                        "name": "terminalSpecialChars",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to count the terminal specials chars like \"\\u001b[30m\", etc...",
                        "default": false,
                        "defaultStr": "false"
                    },
                    "newLineChars": {
                        "name": "newLineChars",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to count the new line special char \"\\n\" or not",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Count how many characters their is in the passed line.\nThis function will exclude the characters like the html tags like <red>, etc...",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__countLineChars($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __countLineChars } from '@lotsof/sugar/string';\n __countLineChars('Hello <red>World</red>'); // 11"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "countLineChars.ts",
                "extension": "ts",
                "relPath": "src/shared/string/countLineChars.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.constantCase": {
                "id": "@lotsof.sugar.shared.string.constantCase",
                "name": "constantCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to snakeCase",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The snakeCased string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Constant case a string",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__constantCase($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __constantCase } from '@lotsof/sugar/string';\n__constantCase('hello world'); // => HELLO_WORLD"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "constantCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/constantCase.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.capitalCase": {
                "id": "@lotsof.sugar.shared.string.capitalCase",
                "name": "capitalCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to snakeCase",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The snakeCased string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Capital case a string",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__capitalCase($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __capitalCase } from '@lotsof/sugar/string';\n__capitalCase('hello world'); // => HELLO WORLD"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "capitalCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/capitalCase.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.camelCase": {
                "id": "@lotsof.sugar.shared.string.camelCase",
                "name": "camelCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to snakeCase",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The snakeCased string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Capital case a string",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__camelCase($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __camelCase } from '@lotsof/sugar/string';\n__camelCase('hello world'); // => HELLO WORLD"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "camelize.ts",
                "extension": "ts",
                "relPath": "src/shared/string/camelize.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.camelize": {
                "id": "@lotsof.sugar.shared.string.camelize",
                "name": "camelize",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to camelize",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The camelized string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Camelize a string",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__camelize($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __camelize } from '@coffeekraken/sugar/string';\n__camelize('hello world'); // => helloWorld"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "camelize.js",
                "extension": "js",
                "relPath": "src/shared/string/camelize.js",
                "children": {}
            },
            "@lotsof.sugar.shared.string.amelCase": {
                "id": "@lotsof.sugar.shared.string.amelCase",
                "name": "amelCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to camelCase",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The camelCased string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "camelCase a string",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__camelCase($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __camelCase } from '@coffeekraken/sugar/string';\n__camelCase('hello world'); // => helloWorld"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "camelCase.js",
                "extension": "js",
                "relPath": "src/shared/string/camelCase.js",
                "children": {}
            },
            "@lotsof.sugar.shared.perf.speedIndex": {
                "id": "@lotsof.sugar.shared.perf.speedIndex",
                "name": "speedIndex",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "slow": {
                        "name": "slow",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "How many loops a \"slow\" computer can make in 100ms",
                        "default": 100000,
                        "defaultStr": "100000"
                    },
                    "fast": {
                        "name": "fast",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "How many loops a \"fast\" computer can make in 100ms",
                        "default": 1400000,
                        "defaultStr": "1400000"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "The speed index calculated from the passed params and the loops the computer can make in 100ms"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function gives you back an index usually between 0 and 100 that represent\nthe speed estimation of the computer on which this code runs.\nThis index is calculated by estimating the loops (for) count that the computer\ncan make in 100ms and make use of the \"slow\" and \"fast\" parameters that represent\nan average of how many loops a \"slow\" computer can do in this timeframe, vs how many loops a \"fast\"\ncomputer can make in this timeframe.\nYou can totally update these parameters as you prefer.\nNote that these parameters can/will be updated during time to reflect the most\naverage cases possible.",
                "namespace": "@lotsof.sugar.shared.perf",
                "status": "stable",
                "snippet": {
                    "label": "__speedIndex($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __speedIndex } from '@lotsof/sugar/perf';\n__speedIndex(); // 78"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "speedIndex.ts",
                "extension": "ts",
                "relPath": "src/shared/perf/speedIndex.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.perf.loopsCount": {
                "id": "@lotsof.sugar.shared.perf.loopsCount",
                "name": "loopsCount",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "timeframe": {
                        "name": "timeframe",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The timeframe to use for calculation",
                        "default": 100,
                        "defaultStr": "100"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "The count of loops executed in the passed timeframe"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function calculate how mane loops are executed in a certain timeframe (ms).\nThis is usefull to estimate the computer speed on which this code is running...",
                "namespace": "@lotsof.sugar.shared.perf",
                "status": "stable",
                "snippet": {
                    "label": "__loopsCount($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __loopsCount } from '@lotsof/sugar/perf';\n__loopsCount(); // 122003"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "loopsCount.ts",
                "extension": "ts",
                "relPath": "src/shared/perf/loopsCount.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.package.parseAuthorString": {
                "id": "@lotsof.sugar.shared.package.parseAuthorString",
                "name": "parseAuthorString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to parse",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "The plain object version of the string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take an author string like \"Olivier Bossel <olivier.bossel@gmail.com> (https://coffeekraken.io)\" and\ntransform it into a plain object with these properties: name, email and url",
                "namespace": "@lotsof.sugar.shared.package",
                "status": "stable",
                "snippet": {
                    "label": "__parseAuthorString($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __parseAuthorString } from '@lotsof/sugar/package';\n __parseAuthorString(\"Olivier Bossel <olivier.bossel@gmail.com> (https://coffeekraken.io)\")\n// => {\n  \"name\": \"Olivier Bossel\",\n  \"email\": \"olivier.bossel@gmail.com\",\n  \"url\": \"https://olivierbossel.com\"\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseAuthorString.ts",
                "extension": "ts",
                "relPath": "src/shared/package/parseAuthorString.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.package.formatPackageJson": {
                "id": "@lotsof.sugar.shared.package.formatPackageJson",
                "name": "formatPackageJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "json": {
                        "name": "json",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The json to process",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "The standardized json"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a package.json JSON formatted object and standardize\nsome fields like the \"author\" one to be sure it is an object at the end,\nthe \"contributors\" array the same way as the \"author\" one, etc... Here's the list\nof processed actions:\n1. Transform the string version of the \"author\" field into an object with the properties \"name\", \"email\" and \"url\"\n2. Transform the string version of the \"contributors\" field into an object with the properties \"name\", \"email\" and \"url\"",
                "namespace": "@lotsof.sugar.shared.package",
                "status": "stable",
                "snippet": {
                    "label": "__formatPackageJson($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __formatPackageJson } from '@lotsof/sugar/package';\n__formatPackageJson({\n   \"author\": \"Olivier Bossel <olivier.bossel@gmail.com> (https://coffeekraken.io)\"\n}); // => {\n   \"author\": {\n     \"name\": \"Olivier Bossel\",\n     \"email\": \"olivier.bossel@gmail.com\",\n     \"url\": \"https://olivierbossel.com\"\n   }\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "formatPackageJson.ts",
                "extension": "ts",
                "relPath": "src/shared/package/formatPackageJson.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.toQueryString": {
                "id": "@lotsof.sugar.shared.object.toQueryString",
                "name": "toQueryString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "obj": {
                        "name": "obj",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to serialize",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The query string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Transform an object (key => pairs) to a query string like \"?var1=value1&var2\"",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__toQueryString($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __toQueryString } from '@coffeekraken/sugar/object'\nconsole.log(__toQueryString({\n\tvalue1 : 'coco',\n\tvalue1 : 'plop'\n}));\n// => ?value1=coco&value2=plop"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toQueryString.ts",
                "extension": "ts",
                "relPath": "src/shared/object/toQueryString.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.toPlainObject": {
                "id": "@lotsof.sugar.shared.object.toPlainObject",
                "name": "toPlainObject",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "null",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Some settings to configure your process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "The new simple object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take an object as parameter and return a new one that does not have getters, setters, etc...",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__toPlainObject($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __toPlainObject } from '@lotsof/sugar/object';\n__toPlainObject({ something: 'cool' });"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toPlainObject.ts",
                "extension": "ts",
                "relPath": "src/shared/object/toPlainObject.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.toJson": {
                "id": "@lotsof.sugar.shared.object.toJson",
                "name": "toJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Any"
                                }
                            ],
                            "raw": "Any"
                        },
                        "description": "The object to convert",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Any"
                            }
                        ],
                        "raw": "Any"
                    },
                    "description": "The converted object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert class instances to plain JSON object",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__toJson($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __toJson } from '@lotsof/sugar/object';\nclass MyClass {\n     hello = 'world';\n     something() {}\n}\n__toJson(new MyClass()); // => { hello: 'world' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toJson.ts",
                "extension": "ts",
                "relPath": "src/shared/object/toJson.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.sortDeep": {
                "id": "@lotsof.sugar.shared.object.sortDeep",
                "name": "sortDeep",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to sort",
                        "defaultStr": ""
                    },
                    "sort": {
                        "name": "sort",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The sort function to use",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "The sorted object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Sort an object properties the same way as the Array.sort do it but will do it recusrively to sort the object deeply.",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__sortDeep($1, $2)",
                    "code": "__sortDeep($1, (a, b) => {\n     $2\n})"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __sortDeep } from '@lotsof/sugar/object';\n__sortDeep({\n   lolo: { weight: 2 },\n   coco: { weight: 10 },\n   plop: { weight: 5 },\n   aha: {\n     hello: 'world',\n     coco: 'plop'\n   }\n}, (a, b) => {\n   return a.key.localeCompare(b.key);\n});\n// {\n//   aha: {\n//      coco: 'plop',\n//      hello: 'world'\n//   }\n//   coco: { weight: 10 }\n//   lolo: { weight: 2 },\n//   plop: { weight: 5 },\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sortDeep.ts",
                "extension": "ts",
                "relPath": "src/shared/object/sortDeep.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.sort": {
                "id": "@lotsof.sugar.shared.object.sort",
                "name": "sort",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to sort",
                        "defaultStr": ""
                    },
                    "sort": {
                        "name": "sort",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The sort function to use. If not specified, will sort the items by key alphabetically",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "The sorted object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Sort an object properties the same way as the Array.sort do it.\nThe \"a\" and \"b\" argument passed to your sort function will have these properties:\n- key: The key of the object\n- value: The actual value of the object property",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__sort($1, $2)",
                    "code": "__sort($1, (a, b) => {\n     // a.key - a.value | b.key - b.value\n     $2\n})"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __sort } from '@lotsof/sugar/object';\n__sort({\n   coco: { weight: 10 },\n   lolo: { weight: 2 },\n   plop: { weight: 5 }\n}, (a, b) => {\n  return a.value.weight - b.value.weight;\n});\n// {\n//   lolo: { weight: 2 },\n//   plop: { weight: 5 },\n//   coco: { weight: 10 }\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sort.ts",
                "extension": "ts",
                "relPath": "src/shared/object/sort.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.set": {
                "id": "@lotsof.sugar.shared.object.set",
                "name": "set",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "obj": {
                        "name": "obj",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object in which to set the value",
                        "defaultStr": ""
                    },
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String|String[]"
                        },
                        "description": "The object path where to set the value",
                        "defaultStr": ""
                    },
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to set",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Mixed"
                            }
                        ],
                        "raw": "Mixed"
                    },
                    "description": "Return the setted value if setted correctly, or undefined if something goes wrong..."
                },
                "setting": {
                    "preferAssign": {
                        "name": "preferAssign",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you prefer using Object.assign rather than = for objects to keep references",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Set an object value using a dotted object path like \"myObject.myProperty.myValue\" to set his position\nIf the path parameter is set to '.', it will act like an `Object.assign(obj, value)`.",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__set($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __set } from '@lotsof/sugar/object';\n __set('myObject.cool.value', 'Hello world'); // => Hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "set.ts",
                "extension": "ts",
                "relPath": "src/shared/object/set.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.merge": {
                "id": "@lotsof.sugar.shared.object.merge",
                "name": "merge",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "args...": {
                        "name": "args...",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Pass all the objects you want to merge",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "The merged object result"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Merge one object with another and return the merged object result. This merging implementation support:\n- Merging object with getters/setters\n- n numbers of objects as arguments",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__merge($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __merge } from '@lotsof/sugar/object';\n__merge({a: 'hello'}, {a: 'plop', hello: 'world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "merge.ts",
                "extension": "ts",
                "relPath": "src/shared/object/merge.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.map": {
                "id": "@lotsof.sugar.shared.object.map",
                "name": "map",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to process",
                        "defaultStr": ""
                    },
                    "processor": {
                        "name": "processor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The processor function that will take as parameters the current property value and the property name",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "The processed object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This is the same function as the \"Array.map\" but for objects. It will iterate over all the properties\nof the passed object and pass the value to your process function. It will then save the property\nwith your processed value",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__map($1, $2)",
                    "code": "__map($1, ({value, prop}) => {\n     $2\n})"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __map } from '@lotsof/sugar/object';\nconst myObject = {\n   hello: 'world',\n   cat: 'Nelson'\n};\n__map(myObject, ({value, prop}) => {\n   return prop === 'hello' ? 'universe' : value;\n});\n{\n   hello: 'universe',\n   cat: 'Nelson'\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "map.ts",
                "extension": "ts",
                "relPath": "src/shared/object/map.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.getKeyByValue": {
                "id": "@lotsof.sugar.shared.object.getKeyByValue",
                "name": "getKeyByValue",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object in which to search for the value",
                        "defaultStr": ""
                    },
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to find in the object",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The key of the wanted value or false if not found"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the key that correspond to the passed value in the passed object",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__getKeyByValue($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getKeyByValue } from '@lotsof/sugar/object';\n__getKeyByValue({ hello: 'world' }, 'world'); // => hello"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getKeyByValue.ts",
                "extension": "ts",
                "relPath": "src/shared/object/getKeyByValue.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.getGlob": {
                "id": "@lotsof.sugar.shared.object.getGlob",
                "name": "getGlob",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "obj": {
                        "name": "obj",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object in which to set the value",
                        "defaultStr": ""
                    },
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The dotted object path to get",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "A settings object to configure your glob get process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Mixed"
                            }
                        ],
                        "raw": "Mixed"
                    },
                    "description": "The getted value or \"undefined\" if nothing found..."
                },
                "setting": {
                    "deepize": {
                        "name": "deepize",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want the result object to be deepized using the ```deepize``` sugar function",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Retreive an object value using a dotted path like \"myObject.myProperty.myValue\".\nIt support glob patterns like \"something..id\" and returns you a new object containing\nall values with the path that matches the passed glob pattern.",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__getGlob($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getGlob } from '@lotsof/sugar/object';\n__getGlob({\n hello: {\n    world: true,\n    plop: false\n}, 'hello.');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getGlob.ts",
                "extension": "ts",
                "relPath": "src/shared/object/getGlob.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.get": {
                "id": "@lotsof.sugar.shared.object.get",
                "name": "get",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "obj": {
                        "name": "obj",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object in which to set the value",
                        "defaultStr": ""
                    },
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The dotted object path to get",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Mixed"
                            }
                        ],
                        "raw": "Mixed"
                    },
                    "description": "The getted value or \"undefined\" if nothing found..."
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Retreive an object value using a dotted path like \"myObject.myProperty.myValue\"",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__get($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __get } from '@lotsof/sugar/object';\n__get(myObject, 'my.cool.value'); // => 'Hello world'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "get.ts",
                "extension": "ts",
                "relPath": "src/shared/object/get.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.flatten": {
                "id": "@lotsof.sugar.shared.object.flatten",
                "name": "flatten",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to flatten",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to configure your flatten process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "The flatten object"
                },
                "setting": {
                    "separation": {
                        "name": "separation",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The separation character to use for preperty names",
                        "default": ".",
                        "defaultStr": "\".\""
                    },
                    "array": {
                        "name": "array",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to flatten array or not",
                        "default": false,
                        "defaultStr": "false"
                    },
                    "quoteSeparatedProperties": {
                        "name": "quoteSeparatedProperties",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to quote dotted properties to be able to restore them correctly later",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "quoteCharacter": {
                        "name": "quoteCharacter",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "Specify the quote character to use when need to quote separated properties",
                        "default": "\"",
                        "defaultStr": "'\"'"
                    },
                    "keepLastIntact": {
                        "name": "keepLastIntact",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to keep the last level (object, array) intact and not to flatten each properties",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Transform the passed multiple level object into a single level one",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__flatten($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __flatten } from '@lotsof/sugar/object';\n__flatten({\n   hello: {\n     world: 'Coco'\n   }\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "flatten.ts",
                "extension": "ts",
                "relPath": "src/shared/object/flatten.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.filterObject": {
                "id": "@lotsof.sugar.shared.object.filterObject",
                "name": "filterObject",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to filter",
                        "defaultStr": ""
                    },
                    "filter": {
                        "name": "filter",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The filter function that take as parameter the property itself, and the property name",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "The filtered object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Allow to filter an object using a function. It works the same as the filter method on the Array object type.\nThe passed filter function will have as parameter each object properties and must return true or false depending if you want the\npassed property in the filtered object",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__filterObject($1, $2)",
                    "code": "__filterObject"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __filterObject } from '@lotsof/sugar/object';\n__filterObject({\n   coco: 'hello',\n   plop: true\n}, (key, item) => typeof item === 'string');\n// { coco: 'hello' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "filterObject.ts",
                "extension": "ts",
                "relPath": "src/shared/object/filterObject.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.ensurePropertyExists": {
                "id": "@lotsof.sugar.shared.object.ensurePropertyExists",
                "name": "ensurePropertyExists",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "obj": {
                        "name": "obj",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object on which to check the path existence",
                        "defaultStr": ""
                    },
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The dotted object path to check",
                        "defaultStr": ""
                    },
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to set to the object path created if not already exist",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Pass a string like \"my.cool.object\" and the value it has to be and this function will ensure that this deep object exist",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__ensurePropertyExists($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __ensureProperyExists } from '@lotsof/sugar/object';\nconst myObj = { hello: 'world' }«\n__ensureProperyExists(myObj, 'cool.object', {});\n// { hello: 'world', cool: { object: {} } }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ensurePropertyExists.ts",
                "extension": "ts",
                "relPath": "src/shared/object/ensurePropertyExists.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.diff": {
                "id": "@lotsof.sugar.shared.object.diff",
                "name": "diff",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object1": {
                        "name": "object1",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The first object used for the diff process",
                        "defaultStr": ""
                    },
                    "object2": {
                        "name": "object2",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The second object used for the diff process",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to configure the diff process:",
                        "default": {},
                        "defaultStr": "{}",
                        "content": "- deep (true) {Boolean}: Specify if you want a deep diff or a simple one level diff\n- added (true) {Boolean}: Specify if you want to include the props that does not exist on the object1 but exists on the object2\n- deleted (false) {Boolean}: Specify if you want to include the props that exists on the object1 but no more on the object2\n- equals (false) {Boolean}: Specify if you want to include the props that are equals from the object1 to the object2\n- emptyObject (false) {Boolean}: Specify if you want to keep the empty objects in the resulting one\n- updated (true) {Boolean}: Specify if you want to include the updated values"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "The object that contains only the differences between the two"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take two objects and return an object that contains only what has been changed between the two.\nThis function is a simple wrapper around the nice object-diff package from Thomas Jensen that you can find here: https://www.npmjs.com/package/object-diff",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__diff($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __diff } from '@lotsof/sugar/object';\nconst myObject1 = {\n   hello: 'world',\n   plop: 'yop'\n};\nconst myObject2 = {\n   coco: 'plop',\n   hello: 'hey!',\n   plop: 'yop'\n};\n__diff(myObject1, myObject2);\n{\n   coco: 'plop',\n   hello: 'hey!'\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "diff.ts",
                "extension": "ts",
                "relPath": "src/shared/object/diff.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.deleteProperty": {
                "id": "@lotsof.sugar.shared.object.deleteProperty",
                "name": "deleteProperty",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object on which you want to delete the property",
                        "defaultStr": ""
                    },
                    "dotPath": {
                        "name": "dotPath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The dotpath to the property you want to delete",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Delete an object property using a dotPath like \"something.else\"",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__deleteProperty($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __deleteProperty } from '@lotsof/sugar/object';\nconst myObject = {\n   hello: 'world',\n   plop: 'yop'\n};\n__deleteProperty(myObject, 'plop');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deleteProperty.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deleteProperty.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.delete": {
                "id": "@lotsof.sugar.shared.object.delete",
                "name": "delete",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "obj": {
                        "name": "obj",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object in which to set the value",
                        "defaultStr": ""
                    },
                    "dotpath": {
                        "name": "dotpath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String|String[]"
                        },
                        "description": "The dotted object/array path to delete",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Delete an object/array property by passing a dotpath to the element you want to remove.",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__get($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __delete } from '@lotsof/sugar/object';\n__delete(myObject, 'my.cool.value');\n__delete(myObject, 'my.cool.value.0');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "delete.ts",
                "extension": "ts",
                "relPath": "src/shared/object/delete.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.deepize": {
                "id": "@lotsof.sugar.shared.object.deepize",
                "name": "deepize",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to convert",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "The converted object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take an object like this one:\n{\n'something.cool': 'hello'\n}\nand convert it to something like this:\n{\nsomething: {\ncool: 'hello'\n}\n}",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__deepize($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __deepize } from '@lotsof/sugar/object';\n__deepize ({ 'something.cool': 'hello' }); // => { something: { cool: 'hello' } }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepize.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepize.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.deepMerge": {
                "id": "@lotsof.sugar.shared.object.deepMerge",
                "name": "deepMerge",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "args...": {
                        "name": "args...",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Pass all the objects you want to merge",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IDeepMergeSettings"
                                }
                            ],
                            "raw": "IDeepMergeSettings"
                        },
                        "description": "Pass as last object the settings one that can contain these properties:",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "The merged object result"
                },
                "setting": {
                    "array": {
                        "name": "array",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Merge or not arrays",
                        "default": false,
                        "defaultStr": "false"
                    },
                    "clone": {
                        "name": "clone",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want the result object to be a clone or the same first passed object",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Deep merge one object with another and return the merged object result. This merging implementation support:\n- Merging object with getters/setters\n- n numbers of objects as arguments\n- Choose beetween cloning first (default) the object or keeping the first passed object as result\nNote that by default the resulting object is a clone and do not have the same reference that the first passed object.",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__deepMerge($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __deepMerge } from '@lotsof/sugar/object';\n__deepMerge({a: {b: {c: 'c', d: 'd'}}}, {a: {b: {e: 'e', f: 'f'}}});\n// => { a: { b: { c: 'c', d: 'd', e: 'e', f: 'f' } } }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepMerge.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepMerge.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.deepMap": {
                "id": "@lotsof.sugar.shared.object.deepMap",
                "name": "deepMap",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object you want to map through",
                        "defaultStr": ""
                    },
                    "processor": {
                        "name": "processor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The processor function that take as parameter the actual property value, the current property name and the full dotted path to the current property",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to configure your deepMap process:",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "classInstances": {
                        "name": "classInstances",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want the objects to be processed the same as other values",
                        "default": false,
                        "defaultStr": "false"
                    },
                    "array": {
                        "name": "array",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if we want to process also arrays or not",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "clone": {
                        "name": "clone",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to clone the object passed before cleaning it",
                        "default": false,
                        "defaultStr": "false"
                    },
                    "privateProps": {
                        "name": "privateProps",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to clean also the private properties that starts with \"_\"",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function is the same as the \"map\" one. The only difference is that this one goes deep into the object",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__deepMap($1, $2)",
                    "code": "__deepMap($1, ({object, prop, value, path}) => {\n     $2\n})"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __deepMap } from '@lotsof/sugar/object';\n__deepMap({\n   hello: 'world'\n}, ({object, prop, value, path}) => {\n   return '~ ' + value;\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepMap.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepMap.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.deepFilter": {
                "id": "@lotsof.sugar.shared.object.deepFilter",
                "name": "deepFilter",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to filter",
                        "defaultStr": ""
                    },
                    "filter": {
                        "name": "filter",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The filter function that take as parameter the property itself, and the property name",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "The filtered object"
                },
                "setting": {
                    "clone": {
                        "name": "clone",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to clone the object before filter it",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Allow to filter an object using a function and this through all of the object structure. It works the same as the filter method on the Array object type.\nThe passed filter function will have as parameter each object properties and must return true or false depending if you want the\npassed property in the filtered object",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __deepFilter } from '@lotsof/sugar/object';\n__deepFilter ({\n   coco: 'hello',\n   plop: true,\n   sub: {\n     property: 'world'\n   }\n}, ({key, item}) => typeof item === 'string');\n// { coco: 'hello' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepFilter.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepFilter.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.deepClean": {
                "id": "@lotsof.sugar.shared.object.deepClean",
                "name": "deepClean",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object you want to map through",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to configure your deepMap process:",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "cleaner": {
                        "name": "cleaner",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The cleaner function that take as parameter the actual property value, the current property name and the full dotted path to the current property",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "array": {
                        "name": "array",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if we want to process also arrays or not",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "clone": {
                        "name": "clone",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to clone the object passed before cleaning it",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function takes an object as input and returns a cleaned version of it.\nYou can pass a cleaner function that has to returns true or false. If returns true, the element will be\nkeeped. If false, it will be removed from the output.\nThe default cleaner function remove all that is either null, \"\" or undefined.",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__deepClean($1)",
                    "code": "__deepClean($1);"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __deepClean } from '@lotsof/sugar/object';\n__deepClean({\n   hello: 'world',\n   something: null\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepClean.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepClean.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.decycle": {
                "id": "@lotsof.sugar.shared.object.decycle",
                "name": "decycle",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "obj": {
                        "name": "obj",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to process",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "The new object circular references free"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This method simply remove the circular references in the passed object",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__decycle($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __decycle } from '@lotsof/sugar/object';\n__decycle({\n   something: 'cool',\n   with: 'circular references',\n   //..\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "decycle.ts",
                "extension": "ts",
                "relPath": "src/shared/object/decycle.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.object.clone": {
                "id": "@lotsof.sugar.shared.object.clone",
                "name": "clone",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to copy",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Specify some settings to configure your clone process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "The cloned object"
                },
                "setting": {
                    "deep": {
                        "name": "deep",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to clone the object deeply",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to clone an object either at 1 level, or deeply.",
                "namespace": "@lotsof.sugar.shared.object",
                "status": "stable",
                "snippet": {
                    "label": "__clone($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __clone } from '@lotsof/sugar/object';\n__clone({\n   hello: 'world'\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "clone.ts",
                "extension": "ts",
                "relPath": "src/shared/object/clone.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.number.toBase": {
                "id": "@lotsof.sugar.shared.number.toBase",
                "name": "toBase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "number": {
                        "name": "number",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The number to convert",
                        "defaultStr": ""
                    },
                    "base": {
                        "name": "base",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The base to convert to",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The converted number in string format"
                },
                "setting": {
                    "chars": {
                        "name": "chars",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The characters set to use for conversion",
                        "default": "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",
                        "defaultStr": "'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert a number to another base between 1 and the length of the \"chars\" settings",
                "namespace": "@lotsof.sugar.shared.number",
                "status": "stable",
                "snippet": {
                    "label": "__toBase($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __toBase } from '@coffeekraken/sugar/number'\n__toBase(1024, 62); // qF"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toBase.ts",
                "extension": "ts",
                "relPath": "src/shared/number/toBase.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.number.pad": {
                "id": "@lotsof.sugar.shared.number.pad",
                "name": "pad",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "number": {
                        "name": "number",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The number to pad",
                        "defaultStr": ""
                    },
                    "width": {
                        "name": "width",
                        "type": {
                            "types": [
                                {
                                    "type": "Integer"
                                }
                            ],
                            "raw": "Integer"
                        },
                        "description": "The width of pad to apply",
                        "defaultStr": ""
                    },
                    "character": {
                        "name": "character",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The character to use",
                        "default": "0",
                        "defaultStr": "\"0\""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Pad a number n of x 0 or another passed character",
                "namespace": "@lotsof.sugar.shared.number",
                "status": "stable",
                "snippet": {
                    "label": "__pad($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __pad } from '@coffeekraken/sugar/number'\n__pad(123, 4) // 0123"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "pad.ts",
                "extension": "ts",
                "relPath": "src/shared/number/pad.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.math.roundWithSign": {
                "id": "@lotsof.sugar.shared.math.roundWithSign",
                "name": "roundWithSign",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "number": {
                        "name": "number",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The number to round",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "The rounded number"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to round a number by keeping his sign \"+\" or \"-\"",
                "namespace": "@lotsof.sugar.shared.math",
                "status": "stable",
                "snippet": {
                    "label": "__roundWithSign($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __roundWithSign } from '@lotsof/sugar/math';\n__roundWithSign(1.5); // => 1\n__roundWithSign(-1.5); // => -1"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "roundWithSign.ts",
                "extension": "ts",
                "relPath": "src/shared/math/roundWithSign.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.math.easeClamp": {
                "id": "@lotsof.sugar.shared.math.easeClamp",
                "name": "easeClamp",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "num": {
                        "name": "num",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The number to clamp",
                        "defaultStr": ""
                    },
                    "min": {
                        "name": "min",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The minimum value",
                        "defaultStr": ""
                    },
                    "max": {
                        "name": "max",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The maximum value",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "The clamped number"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Clamp a number between two values with easing in and out",
                "namespace": "@lotsof.sugar.shared.math",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __easeClamp } from '@lotsof/sugar/math';\n__easeClamp(-20, -10, 0, 100, 110); // => -10"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeClamp.ts",
                "extension": "ts",
                "relPath": "src/shared/math/easeClamp.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.math.distanceBetween": {
                "id": "@lotsof.sugar.shared.math.distanceBetween",
                "name": "distanceBetween",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "point1": {
                        "name": "point1",
                        "type": {
                            "types": [
                                {
                                    "type": "Point"
                                }
                            ],
                            "raw": "Point"
                        },
                        "description": "The point 1, x and y value",
                        "defaultStr": ""
                    },
                    "point2": {
                        "name": "point2",
                        "type": {
                            "types": [
                                {
                                    "type": "Point"
                                }
                            ],
                            "raw": "Point"
                        },
                        "description": "The point 2, x and y value",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "The distance between the two points"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Get the distance between two points",
                "namespace": "@lotsof.sugar.shared.math",
                "status": "stable",
                "snippet": {
                    "label": "__distanceBetween($1, $2)",
                    "code": "__distanceBeetween({\n     x: $1, y: $2\n}, {\n     x: $3, y: $4\n})"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __distanceBetween } from '@coffeekraken/sugar/geom'\n__distanceBetween({\n\tx: 10, y: 20\n}, {\n\tx: 10, y: 30\n}) // 10"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distanceBetween.ts",
                "extension": "ts",
                "relPath": "src/shared/math/distanceBetween.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.math.clamp": {
                "id": "@lotsof.sugar.shared.math.clamp",
                "name": "clamp",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "num": {
                        "name": "num",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The number to clamp",
                        "defaultStr": ""
                    },
                    "min": {
                        "name": "min",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The minimum value",
                        "defaultStr": ""
                    },
                    "max": {
                        "name": "max",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The maximum value",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "The clamped number"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Clamp a number between two values",
                "namespace": "@lotsof.sugar.shared.math",
                "status": "stable",
                "snippet": {
                    "label": "__clamp($1, $2, $3)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __clamp } from '@lotsof/sugar/math';\n__clamp(10, 0, 100); // => 10\n__clamp(0, 0, 100); // => 0\n__clamp(100, 0, 100); // => 100\n__clamp(101, 0, 100); // => 100"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "clamp.ts",
                "extension": "ts",
                "relPath": "src/shared/math/clamp.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.math.circleConstrain": {
                "id": "@lotsof.sugar.shared.math.circleConstrain",
                "name": "circleConstrain",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "center": {
                        "name": "center",
                        "type": {
                            "types": [
                                {
                                    "type": "Vector2"
                                }
                            ],
                            "raw": "Vector2"
                        },
                        "description": "The center point of the circle",
                        "defaultStr": ""
                    },
                    "radius": {
                        "name": "radius",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The radius to constrain the point in",
                        "defaultStr": ""
                    },
                    "point": {
                        "name": "point",
                        "type": {
                            "types": [
                                {
                                    "type": "Vector2"
                                }
                            ],
                            "raw": "Vector2"
                        },
                        "description": "The point to constrain",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Vector2"
                            }
                        ],
                        "raw": "Vector2"
                    },
                    "description": "The new constrained value for the point"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Take as parameter a central point, a radius and a points to constrain inside the circle defined by the radius",
                "namespace": "@lotsof.sugar.shared.math",
                "status": "stable",
                "snippet": {
                    "label": "__circleConstrain($1, $1)",
                    "code": "__circleConstain({\n     x: $1, y: $2\n}, $3, {\n     x: $4, y: $5\n})"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __circleConstrain } from '@coffeekraken/sugar/math'\n__circleConstrain({\n\tx: 10, y: 10\n}, 10, {\n\tx: 10, y: 5\n})"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "circleConstrain.ts",
                "extension": "ts",
                "relPath": "src/shared/math/circleConstrain.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isYyyymmddDate": {
                "id": "@lotsof.sugar.shared.is.isYyyymmddDate",
                "name": "isYyyymmddDate",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "date": {
                        "name": "date",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The date to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if is valid, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if is a valid yyyy.mm.dd date\nThis will match : yyyy.mm.dd | yyyy/mm/dd | yyyy-mm-dd | yyyy mm dd",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isYyyymmddDate($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isYyyymmddDate } from '@coffeekraken/sugar/is'\nif (__isYyyymmddDate('2018.12.25')) {\n    // do something cool\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isYyyymmddDate.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isYyyymmddDate.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isWindows": {
                "id": "@lotsof.sugar.shared.is.isWindows",
                "name": "isWindows",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if mac OS X, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the app run on mac OS X or not",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isWindows()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isWindows } from '@lotsof/sugar/is';\n__isWindows(); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isWindows.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isWindows.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isValidNumber": {
                "id": "@lotsof.sugar.shared.is.isValidNumber",
                "name": "isValidNumber",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "any"
                                }
                            ],
                            "raw": "any"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if it's in a valid number, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid number.\nA valid number is either an integer or a number (float).",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isValidNumber()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isValidNumber } from '@coffeekraken/sugar/is'\n__isValidNumber(12) // true\n__isValidNumber('he') // false\n__isValidNumber(undefined) // false\n__isValidNumber(NaN) // false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isValidNumber.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isValidNumber.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.string.isUrlCompliant": {
                "id": "@lotsof.sugar.shared.string.isUrlCompliant",
                "name": "isUrlCompliant",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if compliant, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed string is url compliant.\nThis mean that it has no spaces, and no special characters",
                "namespace": "@lotsof.sugar.shared.string",
                "status": "stable",
                "snippet": {
                    "label": "__isUrlCompliant($1)"
                },
                "example": [
                    {
                        "language": "php",
                        "code": "import { __isUrlCompliant } from '@lotsof/sugar/string';\n__isUrlCompliant('Hello world'); // false\n__isUrlCompliant('/something/cool'); // true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isUrlCompliant.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isUrlCompliant.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isUrl": {
                "id": "@lotsof.sugar.shared.is.isUrl",
                "name": "isUrl",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "The check result"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid url",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isUrl($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isUrl } from '@lotsof/sugar/is';\n__isUrl('http://google.com') => true\n__isUrl('ftp://web.coco.com:2222') => false\n__isUrl('hello') => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isUrl.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isUrl.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.testEnv": {
                "id": "@lotsof.sugar.shared.is.testEnv",
                "name": "testEnv",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if in environment environment, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current environment is in a test process or not",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isTestEnv()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isTestEnv } from '@lotsof/sugar/is';\n__isTestEnv(); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isTestEnv.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isTestEnv.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isTerminal": {
                "id": "@lotsof.sugar.shared.is.isTerminal",
                "name": "isTerminal",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if is in the terminal, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply returns if the process runs inside a terminal or not",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isTerminal($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isTerminal } from '@lotsof/sugar/is';\n__isTerminal(); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isTerminal.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isTerminal.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isString": {
                "id": "@lotsof.sugar.shared.is.isString",
                "name": "isString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if it's a String, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js String",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isString($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isString } from '@coffeekraken/sugar/is'\nif (__isString({}) {\n  // do something\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isString.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isString.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isRegexp": {
                "id": "@lotsof.sugar.shared.is.isRegexp",
                "name": "isRegexp",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Regexp"
                            }
                        ],
                        "raw": "Regexp"
                    },
                    "description": "true if it's a Regexp, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js Regexp",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isRegex($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isRegex } from '@coffeekraken/sugar/is'\nif (__isRegex(/^hello$/g) {\n  // do something\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isRegex.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isRegex.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isPlainObject": {
                "id": "@lotsof.sugar.shared.is.isPlainObject",
                "name": "isPlainObject",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                },
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Object|Array"
                        },
                        "description": "The object(s) to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if is plain object(s), false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed object (or array of objects) is/are plain object(s)",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isPlainObject($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isPlainObject } from '@lotsof/sugar/is';\n__isPlainObject({ hello: 'world'}); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isPlainObject.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isPlainObject.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isPath": {
                "id": "@lotsof.sugar.shared.is.isPath",
                "name": "isPath",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if the path is valide, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed string is a valid path or not",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isPath($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isPath } from '@lotsof/sugar/is';\n__isPath('hello/world'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isPath.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isPath.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isOsx": {
                "id": "@lotsof.sugar.shared.is.isOsx",
                "name": "isOsx",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if mac OS X, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the app run on mac OS X or not",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isOsx()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isOsx } from '@lotsof/sugar/is';\n__isOsx(); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isOsx.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isOsx.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isOdd": {
                "id": "@lotsof.sugar.shared.is.isOdd",
                "name": "isOdd",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if odd, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if a number is odd or not",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isOdd($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isOdd } from '@coffeekraken/sugar/is'\n__isOdd(1) // true\n__isOdd(2) // false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isOdd.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isOdd.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isObject": {
                "id": "@lotsof.sugar.shared.is.isObject",
                "name": "isObject",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if it's a object, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js object",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isObject($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isObject } from '@coffeekraken/sugar/is'\nif (__isObject({}) {\n  // do something\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isObject.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isObject.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isNumber": {
                "id": "@lotsof.sugar.shared.is.isNumber",
                "name": "isNumber",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "The check result"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a number",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isNumber($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isNumber } from '@lotsof/sugar/is';\n__isNumber(12) => true\n__isNumber(22.3) => true\n__isNumber('20') => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isNumber.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isNumber.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isNode": {
                "id": "@lotsof.sugar.shared.is.isNode",
                "name": "isNode",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if running under javascript runtime, false if not..."
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current script is running under node runtime or not...",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isNode()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isNode } from '@lotsof/sugar/is';\n__isNode(); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isNode.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isNode.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isModuleSystem": {
                "id": "@lotsof.sugar.shared.is.isModuleSystem",
                "name": "isModuleSystem",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "systemNames": {
                        "name": "systemNames",
                        "type": {
                            "types": [
                                {
                                    "type": "array",
                                    "of": [
                                        {
                                            "type": "string",
                                            "value": "esm"
                                        },
                                        {
                                            "type": "string",
                                            "value": "cjs"
                                        }
                                    ]
                                }
                            ],
                            "raw": "('esm'|'cjs')[]"
                        },
                        "description": "An array of system names to check against",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if the current system is one of the passed system names, false otherwise"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current module system the code runs on is one of the passed system names like \"esm\" or \"cjs\".",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isModuleSystem($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isModuleSystem } from '@lotsof/sugar/is';\n__isModuleSystem('esm'); // => true\n__isModuleSystem('cjs'); // => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isModuleSystem.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isModuleSystem.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isMmddyyyyDate": {
                "id": "@lotsof.sugar.shared.is.isMmddyyyyDate",
                "name": "isMmddyyyyDate",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "date": {
                        "name": "date",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The date to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if is valid, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if is a valid mm.dd.yyyy date\nThis will match : mm.dd.yyyy | mm/dd/yyyy | mm-dd-yyyy | mm dd yyyy",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isMmddyyyyDate($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isMmddyyyyDate } from '@coffeekraken/sugar/is'\nif (__isMmddyyyyDate('12.25.2018')) {\n    // do something cool\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isMmddyyyyDate.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isMmddyyyyDate.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isMap": {
                "id": "@lotsof.sugar.shared.is.isMap",
                "name": "isMap",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if it's a Map, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js Map",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isMap($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isMap } from '@coffeekraken/sugar/is'\nconst map = new Map();\nif (__isMap(map) {\n  // do something\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isMap.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isMap.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isLinux": {
                "id": "@lotsof.sugar.shared.is.isLinux",
                "name": "isLinux",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if linux, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the app run on linux",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isLinux($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isLinux } from '@lotsof/sugar/is';\n__isLinux(); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isLinux.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isLinux.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isJson": {
                "id": "@lotsof.sugar.shared.is.isJson",
                "name": "isJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if it's a valid json, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid json",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isJson($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isJson } from '@coffeekraken/sugar/is'\nif (__isJson('[{id:10}]')) {\n  // do something\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isJson.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isJson.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isIsoTime": {
                "id": "@lotsof.sugar.shared.is.isIsoTime",
                "name": "isIsoTime",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "The check result"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid iso date string",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isIsoTime($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isIsoTime } from '@lotsof/sugar/is';\n__isIsoTime('john.doe@gmail.com') => false\n__isIsoTime('plop@yop.com') => false\n__isIsoTime('hello') => false\n__isIsoTime('17:21') => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isIsoTime.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isIsoTime.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isIsoDateTime": {
                "id": "@lotsof.sugar.shared.is.isIsoDateTime",
                "name": "isIsoDateTime",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "The check result"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid iso date time string",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isIsoDateTime($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isIsoDateTime } from '@lotsof/sugar/is';\n__isIsoDateTime('john.doe@gmail.com') => false\n__isIsoDateTime('plop@yop.com') => false\n__isIsoDateTime('2008-08-30 17:21:59') => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isIsoDateTime.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isIsoDateTime.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isIsoDate": {
                "id": "@lotsof.sugar.shared.is.isIsoDate",
                "name": "isIsoDate",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "The check result"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid iso date string",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isIsoDate($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isIsoDate } from '@lotsof/sugar/is';\n__isIsoDate('john.doe@gmail.com') => false\n__isIsoDate('plop@yop.com') => false\n__isIsoDate('hello') => false\n__isIsoDate('2008-08') => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isIsoDate.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isIsoDate.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isInteger": {
                "id": "@lotsof.sugar.shared.is.isInteger",
                "name": "isInteger",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "The check result"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is an integer",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isInteger($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isInteger } from '@lotsof/sugar/is';\n__isInteger(10) => true\n__isInteger('hello') => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isInteger.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isInteger.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isGlob": {
                "id": "@lotsof.sugar.shared.is.isGlob",
                "name": "isGlob",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$string": {
                        "name": "$string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if is a valid glob pattern, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed string is a valid glob pattern or not",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isGlob($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isGlob } from '@lotsof/sugar/is';\n__isGlob('something/.js); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isGlob.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isGlob.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isFunction": {
                "id": "@lotsof.sugar.shared.is.isFunction",
                "name": "isFunction",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if it's a function, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js function",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isFunction($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isFunction } from '@coffeekraken/sugar/is'\nif (__isFunction(function() {})) {\n  // do something\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isFunction.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isFunction.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isEven": {
                "id": "@lotsof.sugar.shared.is.isEven",
                "name": "isEven",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if even, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if a number is even or not",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "isEven($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isEven } from '@coffeekraken/sugar/is'\n__isEven(1) // false\n__isEven(2) // true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isEven.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isEven.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isEsm": {
                "id": "@lotsof.sugar.shared.is.isEsm",
                "name": "isEsm",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if the current system is esm"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current module system the code runs on \"esm\" module system.",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isEsm()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isEsm } from '@lotsof/sugar/is';\n__isEsm(); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isEsm.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isEsm.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isEmail": {
                "id": "@lotsof.sugar.shared.is.isEmail",
                "name": "isEmail",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "The check result"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid email address",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isEmail($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isEmail } from '@lotsof/sugar/is';\n__isEmail('john.doe@gmail.com') => true\n__isEmail('plop@yop.com') => true\n__isEmail('hello') => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isEmail.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isEmail.ts",
                "children": {}
            },
            "@lotsof.sugar.js.is.isDomNode": {
                "id": "@lotsof.sugar.js.is.isDomNode",
                "name": "isDomNode",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "element": {
                        "name": "element",
                        "type": {
                            "types": [
                                {
                                    "type": "any"
                                }
                            ],
                            "raw": "any"
                        },
                        "description": "The element to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if is a DOM node, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed element is a DOM node",
                "namespace": "@lotsof.sugar.js.is",
                "status": "stable",
                "snippet": {
                    "label": "__isDomNode($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isDomNode } from '@coffeekraken/sugar/dom'\n__isDomNode($myElement);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isDomNode.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isDomNode.ts",
                "children": {}
            },
            "@lotsof.sugar.js.is.isDomElement": {
                "id": "@lotsof.sugar.js.is.isDomElement",
                "name": "isDomElement",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "element": {
                        "name": "element",
                        "type": {
                            "types": [
                                {
                                    "type": "any"
                                }
                            ],
                            "raw": "any"
                        },
                        "description": "The element to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if is a DOM element, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Check if the passed element is a DOM element",
                "namespace": "@lotsof.sugar.js.is",
                "status": "stable",
                "snippet": {
                    "label": "__isDomElement($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isDomElement } from '@coffeekraken/sugar/dom'\n__isDomElement($myElement);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isDomElement.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isDomElement.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isDdmmyyyyDate": {
                "id": "@lotsof.sugar.shared.is.isDdmmyyyyDate",
                "name": "isDdmmyyyyDate",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "date": {
                        "name": "date",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The date to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if is valid, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if is a valid dd.mm.yyyy date\nThis will match : dd.mm.yyyy | dd/mm/yyyy | dd-mm-yyyy | dd mm yyyy",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isDdmmyyyyDate($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isDdmmyyyyDate } from '@coffeekraken/sugar/is'\nif (__isDdmmyyyyDate('20.12.2018')) {\n    // do something cool\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isDdmmyyyyDate.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isDdmmyyyyDate.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.cyclic": {
                "id": "@lotsof.sugar.shared.is.cyclic",
                "name": "cyclic",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            },
                            {
                                "type": "false"
                            }
                        ],
                        "raw": "String|false"
                    },
                    "description": "false if all is ok, a string that tells where the circular dep has been found if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed object has circular dependencies and if so, returns where it has been found in the object",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isCyclic($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isCyclic } from '@lotsof/sugar/is';\nconst obj = { hello: 'world' };\nobj.cyclic = obj;\n__isCyclic(obj);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isCyclic.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isCyclic.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isCreditCard": {
                "id": "@lotsof.sugar.shared.is.isCreditCard",
                "name": "isCreditCard",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "The check result"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid credit card number",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isCreditCard($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import {__isCreditCard } from '@lotsof/sugar/is';\n__isCreditCard('john.doe@gmail.com') => true\n__isCreditCard('plop@yop.com') => true\n__isCreditCard('hello') => false\n__isCreditCard('378282246310006') => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isCreditCard.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isCreditCard.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isColor": {
                "id": "@lotsof.sugar.shared.is.isColor",
                "name": "isColor",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "The check result"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a color",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isColor($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isColor } from '@lotsof/sugar/is';\n__isColor('red') => true\n__isColor('#fff') => true\n__isColor('hello') => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isColor.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isColor.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isClassInstance": {
                "id": "@lotsof.sugar.shared.is.isClassInstance",
                "name": "isClassInstance",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Any"
                                }
                            ],
                            "raw": "Any"
                        },
                        "description": "The object to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if is an custom object instance, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed item is an object class and not a plain object.",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isClassInstance($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isClassInstance } from '@lotsof/sugar/is';\nif (__isClassInstance({\n     something: 'hello'\n})); // => false\nclass MyClass {\n     constructor() {}\n}\n__isClassInstance(new MyClass());"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isClassInstance.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isClassInstance.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.class": {
                "id": "@lotsof.sugar.shared.is.class",
                "name": "class",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "variable": {
                        "name": "variable",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                },
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Mixed|Array"
                        },
                        "description": "The variable(s) to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if is class(es), false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed variable (or array of variables) is/are plain variable(s)",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isClass($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isClass } = from '@lotsof/sugar/is';\n__isClass({ hello: 'world'}); // => false\nconst myCoolClass = class Coco{};\n__isClass(myCoolClass); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isClass.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isClass.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isCjs": {
                "id": "@lotsof.sugar.shared.is.isCjs",
                "name": "isCjs",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if the current system is esm"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current module system the code runs on \"commonjs\" module system.",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isCjs()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isCjs } from '@lotsof/sugar/is';\n__isCjs(); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isCjs.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isCjs.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isBrowser": {
                "id": "@lotsof.sugar.shared.is.isBrowser",
                "name": "isBrowser",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if it's in a browser, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the script is running inside a browser or not",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isBrowser()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isBrowser } from '@coffeekraken/sugar/is'\nif (__isBrowser() {\n  // do something\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isBrowser.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isBrowser.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isBoolean": {
                "id": "@lotsof.sugar.shared.is.isBoolean",
                "name": "isBoolean",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if it's a Boolean, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js Boolean",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isBoolean($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isBoolean } from '@coffeekraken/sugar/is'\nif (__isBoolean(true) {\n  // do something\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isBoolean.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isBoolean.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isBase64": {
                "id": "@lotsof.sugar.shared.is.isBase64",
                "name": "isBase64",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if it's a Boolean, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a base 64 string",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isBase64($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isBase64 } from '@coffeekraken/sugar/is'\nif (__isBase64('wfwefwefiowjfiojwiefjwoiejfiowjfi9jef98je9f3j') {\n  // do something\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isBase64.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isBase64.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.is.isArray": {
                "id": "@lotsof.sugar.shared.is.isArray",
                "name": "isArray",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if it's a Array, false if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js Array",
                "namespace": "@lotsof.sugar.shared.is",
                "status": "stable",
                "snippet": {
                    "label": "__isArray($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isArray } from '@coffeekraken/sugar/is'\nif (__isArray([]) {\n  // do something\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isArray.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isArray.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.html.unescapeHtml": {
                "id": "@lotsof.sugar.shared.html.unescapeHtml",
                "name": "unescapeHtml",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "html": {
                        "name": "html",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The html to unescape",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The unescaped html"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to unescape some html characters like &lt;, etc...",
                "namespace": "@lotsof.sugar.shared.html",
                "status": "stable",
                "snippet": {
                    "label": "__unescapeHtml($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __unescapeHtml } from '@lotsof/sugar/html';\n__unescapeHtml('&lt;s-code-example&gt;'); // => <s-code-example>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "unescapeHtml.ts",
                "extension": "ts",
                "relPath": "src/shared/html/unescapeHtml.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.html.stripTags": {
                "id": "@lotsof.sugar.shared.html.stripTags",
                "name": "stripTags",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "html": {
                        "name": "html",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The html string to process",
                        "defaultStr": ""
                    },
                    "allowedTags": {
                        "name": "allowedTags",
                        "type": {
                            "types": [
                                {
                                    "type": "array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String[]"
                        },
                        "description": "The tags that are allowed like ['a','p','h1','h2']...",
                        "defaultStr": ""
                    },
                    "tagReplacement": {
                        "name": "tagReplacement",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "A string with which you want to replace the tags",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The processed string without tags"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Strip tags of an html string.\nThis is a simple wrapper of the nice \"striptags\" package that you can find here: https://www.npmjs.com/package/striptags",
                "namespace": "@lotsof.sugar.shared.html",
                "status": "stable",
                "snippet": {
                    "label": "__stripTags($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __stripTags } from '@coffeekraken/sugar/html'\n__stripTags('<p><span>Hello</span> world</p>', '<span>') // <span>Hello</span> world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "stripTags.ts",
                "extension": "ts",
                "relPath": "src/shared/html/stripTags.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.html.tags": {
                "id": "@lotsof.sugar.shared.html.tags",
                "name": "tags",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The new text"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "An object of tags to replace which have as value the replacement function that take the tag name, the tag content and must return the replacement content",
                "namespace": "@lotsof.sugar.shared.html",
                "status": "stable",
                "snippet": {
                    "label": "__replaceTags($1m $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __replaceTags } from '@lotsof/sugar/html';\n __replaceTags('<span>Hello</span> world', {\n   span: (tag, content) => `<div>${content}</div>`; // => <div>Hello</div> world\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "replaceTags.ts",
                "extension": "ts",
                "relPath": "src/shared/html/replaceTags.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.html.extractCssClassesNames": {
                "id": "@lotsof.sugar.shared.html.extractCssClassesNames",
                "name": "extractCssClassesNames",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "html": {
                        "name": "html",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The HTML to process.",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "array",
                                "of": [
                                    "String"
                                ]
                            }
                        ],
                        "raw": "String[]"
                    },
                    "description": "The finded css classes names"
                },
                "setting": {
                    "expandPleasantCssClassname": {
                        "name": "expandPleasantCssClassname",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to expand the pleasant css classes names like \"s-typo:p\" to \"s-typo--p\"",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to extract all the classes names from a passed html string.\nYou can use it with other things than html but depending on the complexity of your string, it may not\nwork as expected...",
                "namespace": "@lotsof.sugar.shared.html",
                "status": "stable",
                "snippet": {
                    "label": "__extractCssClassesNames($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __extractCssClassesNames } from '@lotsof/sugar/html';\n__extractCssClassesNames('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "extractCssClassesNames.ts",
                "extension": "ts",
                "relPath": "src/shared/html/extractCssClassesNames.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.html.expandPleasantCssClassnames": {
                "id": "@lotsof.sugar.shared.html.expandPleasantCssClassnames",
                "name": "expandPleasantCssClassnames",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "html": {
                        "name": "html",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The HTML to process. It can be actually any string values like .vue file, etc...",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The processed string with converted classnames"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to convert \"colon\" classnames like \"s-something:cool @desktop something\"\nto comprehensive classnames for css like \"s-something s-something-cool something_desktop\", etc...",
                "namespace": "@lotsof.sugar.shared.html",
                "status": "stable",
                "snippet": {
                    "label": "__expandPleasantCssClassnames($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __expandPleasantCssClassnames } from '@lotsof/sugar/html';\n__expandPleasantCssClassnames('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "expandPleasantCssClassnames.ts",
                "extension": "ts",
                "relPath": "src/shared/html/expandPleasantCssClassnames.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.html.expandPleasantCssClassname": {
                "id": "@lotsof.sugar.shared.html.expandPleasantCssClassname",
                "name": "expandPleasantCssClassname",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "classesStr": {
                        "name": "classesStr",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The classes string to convert like \"s-typo:h1 s-font:40\", etc...",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The processed string with converted classnames"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to convert \"colon\" classnames like \"s-something:cool @desktop something\"\nto comprehensive classnames for css like \"s-something s-something-cool something_desktop\", etc...",
                "namespace": "@lotsof.sugar.shared.html",
                "status": "stabée",
                "snippet": {
                    "label": "__expandPleasantCssClassname($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __expandPleasantCssClassname } from '@lotsof/sugar/html';\n__expandPleasantCssClassname('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "expandPleasantCssClassname.ts",
                "extension": "ts",
                "relPath": "src/shared/html/expandPleasantCssClassname.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.html.escapeHtml": {
                "id": "@lotsof.sugar.shared.html.escapeHtml",
                "name": "escapeHtml",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "html": {
                        "name": "html",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The html to unescape",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The unescaped html"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to escape some html characters like &lt;, etc...",
                "namespace": "@lotsof.sugar.shared.html",
                "status": "stable",
                "snippet": {
                    "label": "__escapeHtml($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __escapeHtml } from '@lotsof/sugar/html';\n__escapeHtml('<s-code-example>'); // => &lt;s-code-example&gt;"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "escapeHtml.ts",
                "extension": "ts",
                "relPath": "src/shared/html/escapeHtml.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.function.throttle": {
                "id": "@lotsof.sugar.shared.function.throttle",
                "name": "throttle",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "threshhold": {
                        "name": "threshhold",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The delay in ms to wait between two function calls",
                        "defaultStr": ""
                    },
                    "fn": {
                        "name": "fn",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The function to throttle",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Function"
                            }
                        ],
                        "raw": "Function"
                    },
                    "description": "The throttled function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This utils function allows you to make sure that a function that will normally be called\nseveral times, for example during a scroll event, to be called once each threshhold time",
                "namespace": "@lotsof.sugar.shared.function",
                "status": "stable",
                "snippet": {
                    "label": "__throttle($1, $2)",
                    "code": "__throttle($1, () => {\n     $2\n})"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __throttle } from '@lotsof/sugar/function';\nconst myThrottledFn = __throttle(1000, () => {\n\t\t// my function content that will be\n\t\t// executed only once each second\n});\n\ndocument.addEventListener('scroll', (e) => {\n\t\t// call my throttled function\n\t\tmyThrottledFn();\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "throttle.ts",
                "extension": "ts",
                "relPath": "src/shared/function/throttle.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.function.memoize": {
                "id": "@lotsof.sugar.shared.function.memoize",
                "name": "memoize",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "fn": {
                        "name": "fn",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The function to memoize his result",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Any"
                            }
                        ],
                        "raw": "Any"
                    },
                    "description": "The memoized function result"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function can be used to memorize a function call result in order to save memory.\nThis is just a \"proxy\" of the \"memoizee\" package.",
                "namespace": "@lotsof.sugar.shared.function",
                "status": "stable",
                "snippet": {
                    "label": "__momoize($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __memoize } from '@lotsof/sugar/function';\nconst fn =  __memoize(function(text) => {\n   return `Hello ${text}`;\n});\nconst result = fn('world'); // first execution. no cache\nconst result1 = fn('plop'); // first execution with this argument, no cache\nconst result2 = fn('world'); // taken from cache"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "memoize.ts",
                "extension": "ts",
                "relPath": "src/shared/function/memoize.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.function.easeInterval": {
                "id": "@lotsof.sugar.shared.function.easeInterval",
                "name": "easeInterval",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "duration": {
                        "name": "duration",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The duration of your interval process you want",
                        "defaultStr": ""
                    },
                    "cb": {
                        "name": "cb",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "A callback function to call at each interval",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IEaseIntervalSettings"
                                }
                            ],
                            "raw": "IEaseIntervalSettings"
                        },
                        "description": "Some settings to customize your interval process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "SPromise"
                            }
                        ],
                        "raw": "SPromise"
                    },
                    "description": "An SPromise that will be resolved once the process is complete, and through which you can subscribe to the \"interval\" event that is the same as the \"cb\" parameter"
                },
                "setting": {
                    "inteval": {
                        "name": "inteval",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "An interval in ms to call your callback function",
                        "default": 40,
                        "defaultStr": "1000/25"
                    },
                    "easing": {
                        "name": "easing",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "An easing function that take as parameter a value between 0 and 1",
                        "default": "easeInOutQuart",
                        "defaultStr": "easeInOutQuart"
                    },
                    "from": {
                        "name": "from",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The value to start with",
                        "default": 0,
                        "defaultStr": "0"
                    },
                    "to": {
                        "name": "to",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The value to end with",
                        "default": 100,
                        "defaultStr": "100"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "ª@todo      tests",
                "namespace": "@lotsof.sugar.shared.function",
                "status": "stable",
                "snippet": {
                    "label": "__easeInterval($1, $2)",
                    "code": "const easeInterval = __easeInterval($1, percent => {\n     $2\n});\n// easeInterval.cancel(); // stop the easing process\nawait easeInterval;"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __easeInterval } from '@lotsof/sugar/function';\nawait __easeInterval(2000, (easedPercent) => {\n     // do something...\n}, {\n     interval: 1000 / 25 // 25 times by second\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "easeInterval.ts",
                "extension": "ts",
                "relPath": "src/shared/function/easeInterval.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.function.debounce": {
                "id": "@lotsof.sugar.shared.function.debounce",
                "name": "debounce",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "delay": {
                        "name": "delay",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "A delay in ms to wait between two function calls",
                        "defaultStr": ""
                    },
                    "fn": {
                        "name": "fn",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The function to debounce",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This utils function allows you to make sure that a function that will normally be called\nseveral times, for example during a scroll event, to be called only once after\nthe delay passed",
                "namespace": "@lotsof.sugar.shared.function",
                "status": "stable",
                "snippet": {
                    "label": "__debounce($1, $2)",
                    "code": "__debounce($1, () => {\n     $2\n})"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __debounce } from '@lotsof/sugar/function';\nconst myDebouncedFn = __debounce(1000, () => {\n\t\t// my function content that will be\n\t\t// executed only once after the 1 second delay\n});\n\ndocument.addEventListener('scroll', (e) => {\n\t\t// call my debounced function\n\t\tmyDebouncedFn();\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "debounce.ts",
                "extension": "ts",
                "relPath": "src/shared/function/debounce.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.formar.formatFileSize": {
                "id": "@lotsof.sugar.shared.formar.formatFileSize",
                "name": "formatFileSize",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "size": {
                        "name": "size",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                },
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "Number|String"
                        },
                        "description": "The size to transform in bytes",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The \"filesize\" settings to customize the output. See [filesize](https://www.npmjs.com/package/filesize) settings",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The human readable version of the passed size"
                },
                "setting": {
                    "base": {
                        "name": "base",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "(number) Number base, default is 10",
                        "default": 10,
                        "defaultStr": "10"
                    },
                    "bits": {
                        "name": "bits",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "(boolean) Enables `bit` sizes, default is false",
                        "default": false,
                        "defaultStr": "false"
                    },
                    "exponent": {
                        "name": "exponent",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "(number) Specifies the SI suffix via exponent, e.g. 2 is MB for bytes, default is 0",
                        "default": 0,
                        "defaultStr": "0"
                    },
                    "fullform": {
                        "name": "fullform",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "(boolean) Enables full form of unit of measure, default is false",
                        "default": false,
                        "defaultStr": "false"
                    },
                    "[fullforms]": {
                        "name": "[fullforms]",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "(array) Array of full form overrides, default is []",
                        "defaultStr": ""
                    },
                    "locale": {
                        "name": "locale",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                },
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "Boolean|String"
                        },
                        "description": "(boolean|string) Localize the output, default is false",
                        "default": false,
                        "defaultStr": "false"
                    },
                    "pad": {
                        "name": "pad",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "(boolean) Should the output be padded to the left, default is false",
                        "default": false,
                        "defaultStr": "false"
                    },
                    "precision": {
                        "name": "precision",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "(number) The precision to use when outputting decimal values, default is 2",
                        "default": 2,
                        "defaultStr": "2"
                    },
                    "round": {
                        "name": "round",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "(number) The rounding function, default is 2",
                        "default": 2,
                        "defaultStr": "2"
                    },
                    "separator": {
                        "name": "separator",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "(string) Separator of thousands, default is '.'",
                        "default": ".",
                        "defaultStr": "'.'"
                    },
                    "spacer": {
                        "name": "spacer",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "(string) Spacer of the output, default is ' '",
                        "default": " ",
                        "defaultStr": "' '"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Transform into human readable string a file size from a number (float or integer) or string.\nThis function use the wonderfull \"filesize\" npm package under the houd.",
                "namespace": "@lotsof.sugar.shared.formar",
                "status": "stable",
                "snippet": {
                    "label": "__formatFileSize($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __formatFilesize } from '@lotsof/sugar/fs';\n__formatFilesize(163931); // => 326.86 KB"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "fileSize.ts",
                "extension": "ts",
                "relPath": "src/shared/format/fileSize.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.extension.commonWebFileExtensions": {
                "id": "@lotsof.sugar.shared.extension.commonWebFileExtensions",
                "name": "commonWebFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array",
                                "of": [
                                    "String"
                                ]
                            }
                        ],
                        "raw": "Array<String>"
                    },
                    "description": "The array of extensions"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@lotsof.sugar.shared.extension",
                "status": "stable",
                "snippet": {
                    "label": "__commonWebFileExtensions()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonWebFileExtensions } from '@lotsof/sugar/extension';\nconst extensions = __commonWebFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonWebFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonWebFileExtensions.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.extension.commonVideoFileExtensions": {
                "id": "@lotsof.sugar.shared.extension.commonVideoFileExtensions",
                "name": "commonVideoFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array",
                                "of": [
                                    "String"
                                ]
                            }
                        ],
                        "raw": "Array<String>"
                    },
                    "description": "The array of extensions"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@lotsof.sugar.shared.extension",
                "status": "stable",
                "snippet": {
                    "label": "__commonVideoFileExtensions()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonVideoFileExtensions } from '@lotsof/sugar/extension';\nconst extensions = __commonVideoFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonVideoFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonVideoFileExtensions.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.extension.commonTextFileExtensions": {
                "id": "@lotsof.sugar.shared.extension.commonTextFileExtensions",
                "name": "commonTextFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array",
                                "of": [
                                    "String"
                                ]
                            }
                        ],
                        "raw": "Array<String>"
                    },
                    "description": "The array of extensions"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@lotsof.sugar.shared.extension",
                "status": "stable",
                "snippet": {
                    "label": "__commonTextFileExtensions()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonTextFileExtensions } from '@lotsof/sugar/extension';\nconst extensions = __commonTextFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonTextFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonTextFileExtensions.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.extension.commonProgrammingFileExtensions": {
                "id": "@lotsof.sugar.shared.extension.commonProgrammingFileExtensions",
                "name": "commonProgrammingFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array",
                                "of": [
                                    "String"
                                ]
                            }
                        ],
                        "raw": "Array<String>"
                    },
                    "description": "The array of extensions"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@lotsof.sugar.shared.extension",
                "status": "stable",
                "snippet": {
                    "label": "__commonProgrammingFileExtensions()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonProgrammingFileExtensions } from '@lotsof/sugar/extension';\nconst extensions = __commonProgrammingFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonProgrammingFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonProgrammingFileExtensions.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.extension.commonMediaFileExtensions": {
                "id": "@lotsof.sugar.shared.extension.commonMediaFileExtensions",
                "name": "commonMediaFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array",
                                "of": [
                                    "String"
                                ]
                            }
                        ],
                        "raw": "Array<String>"
                    },
                    "description": "The array of extensions"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common media file extensions with or without the dot",
                "namespace": "@lotsof.sugar.shared.extension",
                "status": "stable",
                "snippet": {
                    "label": "__commonMediaFileExtensions()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonMediaFileExtensions } from '@lotsof/sugar/extension';\nconst extensions = __commonMediaFileExtensions(); // => ['avi','mp3',...]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonMediaFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonMediaFileExtensions.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.extension.commonImageFileExtensions": {
                "id": "@lotsof.sugar.shared.extension.commonImageFileExtensions",
                "name": "commonImageFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array",
                                "of": [
                                    "String"
                                ]
                            }
                        ],
                        "raw": "Array<String>"
                    },
                    "description": "The array of extensions"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@lotsof.sugar.shared.extension",
                "status": "stable",
                "snippet": {
                    "label": "__commonImageFileExtensions()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonImageFileExtensions } from '@lotsof/sugar/extension';\nconst extensions = __commonImageFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonImageFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonImageFileExtensions.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.extension.commonFontFileExtensions": {
                "id": "@lotsof.sugar.shared.extension.commonFontFileExtensions",
                "name": "commonFontFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array",
                                "of": [
                                    "String"
                                ]
                            }
                        ],
                        "raw": "Array<String>"
                    },
                    "description": "The array of extensions"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@lotsof.sugar.shared.extension",
                "status": "stable",
                "snippet": {
                    "label": "__commonFontFileExtensions()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonFontFileExtensions } from '@lotsof/sugar/extension';\nconst extensions = __commonFontFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonFontFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonFontFileExtensions.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.extension.commonFileExtensions": {
                "id": "@lotsof.sugar.shared.extension.commonFileExtensions",
                "name": "commonFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array",
                                "of": [
                                    "String"
                                ]
                            }
                        ],
                        "raw": "Array<String>"
                    },
                    "description": "The array of extensions"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common file extensions with or without the dot.\nYou can filter extensions by types:\n- audio\n- compressed\n- data\n- disc\n- email\n- executable\n- font\n- image\n- media\n- programming\n- text\n- video\n- web",
                "namespace": "@lotsof.sugar.shared.extension",
                "status": "stable",
                "snippet": {
                    "label": "__commonFileExtensions()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonFileExtensions } from '@lotsof/sugar/extension';\nconst extensions = __commonFileExtensions(); // => ['avi','mp3',...]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonFileExtensions.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.extension.commonExecutableFileExtensions": {
                "id": "@lotsof.sugar.shared.extension.commonExecutableFileExtensions",
                "name": "commonExecutableFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array",
                                "of": [
                                    "String"
                                ]
                            }
                        ],
                        "raw": "Array<String>"
                    },
                    "description": "The array of extensions"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@lotsof.sugar.shared.extension",
                "status": "stable",
                "snippet": {
                    "label": "__commonExecutableFileExtensions()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonExecutableFileExtensions } from '@lotsof/sugar/extension';\nconst extensions = __commonExecutableFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonExecutableFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonExecutableFileExtensions.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.extension.commonEmailFileExtensions": {
                "id": "@lotsof.sugar.shared.extension.commonEmailFileExtensions",
                "name": "commonEmailFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array",
                                "of": [
                                    "String"
                                ]
                            }
                        ],
                        "raw": "Array<String>"
                    },
                    "description": "The array of extensions"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@lotsof.sugar.shared.extension",
                "status": "stable",
                "snippet": {
                    "label": "__commonEmailFileExtensions()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonEmailFileExtensions } from '@lotsof/sugar/extension';\nconst extensions = __commonEmailFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonEmailFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonEmailFileExtensions.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.extension.commonDiscFileExtensions": {
                "id": "@lotsof.sugar.shared.extension.commonDiscFileExtensions",
                "name": "commonDiscFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array",
                                "of": [
                                    "String"
                                ]
                            }
                        ],
                        "raw": "Array<String>"
                    },
                    "description": "The array of extensions"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@lotsof.sugar.shared.extension",
                "status": "stable",
                "snippet": {
                    "label": "__commonDiscFileExtensions()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonDiscFileExtensions } from '@lotsof/sugar/extension';\nconst extensions = __commonDiscFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonDiscFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonDiscFileExtensions.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.extension.commonDataFileExtensions": {
                "id": "@lotsof.sugar.shared.extension.commonDataFileExtensions",
                "name": "commonDataFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array",
                                "of": [
                                    "String"
                                ]
                            }
                        ],
                        "raw": "Array<String>"
                    },
                    "description": "The array of extensions"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@lotsof.sugar.shared.extension",
                "status": "stable",
                "snippet": {
                    "label": "__commonDataFileExtensions()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonDataFileExtensions } from '@lotsof/sugar/extension';\nconst extensions = __commonDataFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonDataFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonDataFileExtensions.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.extension.commonCompressedFileExtensions": {
                "id": "@lotsof.sugar.shared.extension.commonCompressedFileExtensions",
                "name": "commonCompressedFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array",
                                "of": [
                                    "String"
                                ]
                            }
                        ],
                        "raw": "Array<String>"
                    },
                    "description": "The array of extensions"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@lotsof.sugar.shared.extension",
                "status": "stable",
                "snippet": {
                    "label": "__commonCompressedFileExtensions()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonCompressedFileExtensions } from '@lotsof/sugar/extension';\nconst extensions = __commonCompressedFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonCompressedFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonCompressedFileExtensions.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.extension.commonAudioFileExtensions": {
                "id": "@lotsof.sugar.shared.extension.commonAudioFileExtensions",
                "name": "commonAudioFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array",
                                "of": [
                                    "String"
                                ]
                            }
                        ],
                        "raw": "Array<String>"
                    },
                    "description": "The array of extensions"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@lotsof.sugar.shared.extension",
                "status": "stable",
                "snippet": {
                    "label": "__commonAudioFileExtensions()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonAudioFileExtensions } from '@lotsof/sugar/extension';\nconst extensions = __commonAudioFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonAudioFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonAudioFileExtensions.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.easing.linear": {
                "id": "@lotsof.sugar.shared.easing.linear",
                "name": "linear",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "The value depending on time"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease linear function",
                "namespace": "@lotsof.sugar.shared.easing",
                "status": "stable",
                "snippet": {
                    "label": "__linear($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __linear } from '@lotsof/sugar/easing';\n__linear(0.4);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "linear.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/linear.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.easing.easeOutQuint": {
                "id": "@lotsof.sugar.shared.easing.easeOutQuint",
                "name": "easeOutQuint",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "The value depending on time"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease out quint function",
                "namespace": "@lotsof.sugar.shared.easing",
                "status": "stable",
                "snippet": {
                    "label": "__easeOutQuint($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __easeOutQuint } from '@lotsof/sugar/easing';\n__easeOutQuint(0.4);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeOutQuint.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeOutQuint.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.easing.easeOutQuart": {
                "id": "@lotsof.sugar.shared.easing.easeOutQuart",
                "name": "easeOutQuart",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "The value depending on time"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease out quart function",
                "namespace": "@lotsof.sugar.shared.easing",
                "status": "stable",
                "snippet": {
                    "label": "__easeOutQuart($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __easeOutQuart } from '@lotsof/sugar/easing';\n__easeOutQuart(0.4);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeOutQuart.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeOutQuart.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.easing.easeOutQuad": {
                "id": "@lotsof.sugar.shared.easing.easeOutQuad",
                "name": "easeOutQuad",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "The value depending on time"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease out quad function",
                "namespace": "@lotsof.sugar.shared.easing",
                "status": "stable",
                "snippet": {
                    "label": "__easeOutQuad($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __easeOutQuad } from '@lotsof/sugar/easing';\n__easeOutQuad(0.4);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeOutQuad.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeOutQuad.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.easing.easeOutCubic": {
                "id": "@lotsof.sugar.shared.easing.easeOutCubic",
                "name": "easeOutCubic",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "The value depending on time"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease out cubic function",
                "namespace": "@lotsof.sugar.shared.easing",
                "status": "stable",
                "snippet": {
                    "label": "__easeOutCubic($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __easeOutCubic } from '@lotsof/sugar/easing';\n__easeOutCubic(0.4);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeOutCubic.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeOutCubic.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.easing.easeInQuint": {
                "id": "@lotsof.sugar.shared.easing.easeInQuint",
                "name": "easeInQuint",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "The value depending on time"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in quint function",
                "namespace": "@lotsof.sugar.shared.easing",
                "status": "stable",
                "snippet": {
                    "label": "__easeInQuint($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __easeInQuint } from '@lotsof/sugar/easing';\n__easeInQuint(0.4);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInQuint.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInQuint.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.easing.easeInQuart": {
                "id": "@lotsof.sugar.shared.easing.easeInQuart",
                "name": "easeInQuart",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "The value depending on time"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in quart function",
                "namespace": "@lotsof.sugar.shared.easing",
                "status": "stable",
                "snippet": {
                    "label": "__easeInQuart($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __easeInQuart } from '@lotsof/sugar/easing';\n__easeInQuart(0.4);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInQuart.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInQuart.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.easing.easeInQuad": {
                "id": "@lotsof.sugar.shared.easing.easeInQuad",
                "name": "easeInQuad",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "The value depending on time"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in quad function",
                "namespace": "@lotsof.sugar.shared.easing",
                "status": "stable",
                "snippet": {
                    "label": "__easeInQuad($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __easeInQuad } from '@lotsof/sugar/easing';\n__easeInQuad(0.4);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInQuad.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInQuad.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.easing.easeInOutQuint": {
                "id": "@lotsof.sugar.shared.easing.easeInOutQuint",
                "name": "easeInOutQuint",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "The value depending on time"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in out quint function",
                "namespace": "@lotsof.sugar.shared.easing",
                "status": "stable",
                "snippet": {
                    "label": "__easeInOutQuint($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __easeInOutQuint } from '@lotsof/sugar/easing';\n__easeInOutQuint(0.4);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInOutQuint.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInOutQuint.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.easing.easeInOutQuart": {
                "id": "@lotsof.sugar.shared.easing.easeInOutQuart",
                "name": "easeInOutQuart",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "The value depending on time"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in out quart function",
                "namespace": "@lotsof.sugar.shared.easing",
                "status": "stable",
                "snippet": {
                    "label": "__easeInOutQuart($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __easeInOutQuart } from '@lotsof/sugar/easing';\n__easeInOutQuart(0.4);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInOutQuart.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInOutQuart.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.easing.easeInOutQuad": {
                "id": "@lotsof.sugar.shared.easing.easeInOutQuad",
                "name": "easeInOutQuad",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "The value depending on time"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in out quad function",
                "namespace": "@lotsof.sugar.shared.easing",
                "status": "stable",
                "snippet": {
                    "label": "__easeInOutQuad($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __easeInOutQuad } from '@lotsof/sugar/easing';\n__easeInOutQuad(0.4);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInOutQuad.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInOutQuad.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.easing.easeInOutCubic": {
                "id": "@lotsof.sugar.shared.easing.easeInOutCubic",
                "name": "easeInOutCubic",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "The value depending on time"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in out cubic function",
                "namespace": "@lotsof.sugar.shared.easing",
                "status": "stable",
                "snippet": {
                    "label": "__easeInOutCubic($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __easeInOutCubic } from '@lotsof/sugar/easing';\n__easeInOutCubic(0.4);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInOutCubic.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInOutCubic.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.easing.easeInCubic": {
                "id": "@lotsof.sugar.shared.easing.easeInCubic",
                "name": "easeInCubic",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "The value depending on time"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in cubic function",
                "namespace": "@lotsof.sugar.shared.easing",
                "status": "stable",
                "snippet": {
                    "label": "__easeInCubic($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __easeInCubic } from '@lotsof/sugar/easing';\n__easeInCubic(0.4);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInCubic.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInCubic.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.easing.availableEasingsArray": {
                "id": "@lotsof.sugar.shared.easing.availableEasingsArray",
                "name": "availableEasingsArray",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array"
                            }
                        ],
                        "raw": "Array"
                    },
                    "description": "An array of all the easing functions available"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply return back an array of all the available easings function in the sugar toolkit",
                "namespace": "@lotsof.sugar.shared.easing",
                "status": "stable",
                "snippet": {
                    "label": "__availableEasingsArray()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __availableEasingsArray } from '@lotsof/sugar/easing';\n__availableEasingsArray();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "availableEasingsArray.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/availableEasingsArray.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.datetime.wait": {
                "id": "@lotsof.sugar.shared.datetime.wait",
                "name": "wait",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "timeout": {
                        "name": "timeout",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The timeout to wait in ms",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Promise"
                            }
                        ],
                        "raw": "Promise"
                    },
                    "description": "A simple promise resolved once the timeout is finished"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function is a simple \"setTimeout\" wrapper inside a promise.",
                "namespace": "@lotsof.sugar.shared.datetime",
                "status": "stable",
                "snippet": {
                    "label": "__wait($1)",
                    "code": "await __wait($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __wait } from '@lotsof/sugar/datetime';\nawait __wait(2000);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "wait.ts",
                "extension": "ts",
                "relPath": "src/shared/datetime/wait.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.datetime.timeAgo": {
                "id": "@lotsof.sugar.shared.datetime.timeAgo",
                "name": "timeAgo",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "timestamp": {
                        "name": "timestamp",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The timestamp to transform",
                        "defaultStr": ""
                    },
                    "format": {
                        "name": "format",
                        "type": {
                            "types": [
                                {
                                    "type": "string",
                                    "value": "short"
                                },
                                {
                                    "type": "string",
                                    "value": "medium"
                                },
                                {
                                    "type": "string",
                                    "value": "long"
                                }
                            ],
                            "raw": "'short'|'medium'|'long'"
                        },
                        "description": "The format you want back",
                        "default": "medium",
                        "defaultStr": "'medium'"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The converted value"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Simple \"time\" ago for your Unix timestamps and JavaScript Date objects.",
                "namespace": "@lotsof.sugar.shared.datetime",
                "status": "stable",
                "snippet": {
                    "label": "__timeAgo($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __timeAgo } from '@lotsof/sugar/datetime';\n__timeAgo(1611344957); // => 7 secs ago"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "timeAgo.ts",
                "extension": "ts",
                "relPath": "src/shared/datetime/timeAgo.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.datetime.formatDuration": {
                "id": "@lotsof.sugar.shared.datetime.formatDuration",
                "name": "formatDuration",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "duration": {
                        "name": "duration",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The duration in ms to format",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The formatted estimation duration"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function let you pass a duration in ms and get back a formatted estimation like \"2.4m\", \"30s\", etc...",
                "namespace": "@lotsof.sugar.shared.datetime",
                "status": "stable",
                "snippet": {
                    "label": "__formatDuration($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __formatDuration } from '@lotsof/sugar/datetime';\n__formatDuration(2000); // => 2s"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "formatDuration.ts",
                "extension": "ts",
                "relPath": "src/shared/datetime/formatDuration.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.datetime.convertTime": {
                "id": "@lotsof.sugar.shared.datetime.convertTime",
                "name": "convertTime",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "from": {
                        "name": "from",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "String|Number"
                        },
                        "description": "The value to start from like \"10s\", \"20ms\", \"2h\", etc...",
                        "defaultStr": ""
                    },
                    "to": {
                        "name": "to",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The format you want to get back",
                        "default": "ms",
                        "defaultStr": "'ms'"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Number"
                            }
                        ],
                        "raw": "Number"
                    },
                    "description": "The converted value"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to convert time like seconds, ms, hours, minutes, etc... from one format to another",
                "namespace": "@lotsof.sugar.shared.datetime",
                "status": "stable",
                "snippet": {
                    "label": "__convertTime($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __convertTime } from '@lotsof/sugar/datetime';\n__convertTime('10s', 'ms'); // => 10000"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "convertTime.ts",
                "extension": "ts",
                "relPath": "src/shared/datetime/convertTime.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.crypto.object": {
                "id": "@lotsof.sugar.shared.crypto.object",
                "name": "object",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the object algorithm",
                "namespace": "@lotsof.sugar.shared.crypto",
                "status": "stable",
                "snippet": {
                    "label": "__object.encrypt($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __object } from '@lotsof/sugar/crypto';\n__object.encrypt({\n     hello: 'world'\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "object.ts",
                "extension": "ts",
                "relPath": "src/shared/crypto/object.ts",
                "children": {
                    "encrypt": {
                        "id": "se1dc2f84f208f124c8dfdc90459d6e65d9f1d5d12b39b21c8466ed6bb50c2a38",
                        "name": "encrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "object": {
                                "name": "object",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Object"
                                        }
                                    ],
                                    "raw": "Object"
                                },
                                "description": "The object to encrypt",
                                "defaultStr": ""
                            },
                            "salt": {
                                "name": "salt",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The salt to encode the object. Needed to decode correctly the object",
                                "default": "coffeekraken.sugar.crypto.object",
                                "defaultStr": "\"coffeekraken.sugar.crypto.object\""
                            }
                        },
                        "return": {
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "description": "The encrypted object"
                        },
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "decrypt": {
                        "id": "s0956d2b63715133c1d7e306b568933c8208a5cb22b2eb12623135ca3f57d2e8f",
                        "name": "decrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "encodedObject": {
                                "name": "encodedObject",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The object to decrypt",
                                "defaultStr": ""
                            },
                            "salt": {
                                "name": "salt",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The salt to decode the object",
                                "default": "coffeekraken.sugar.crypto.object",
                                "defaultStr": "'coffeekraken.sugar.crypto.object'"
                            }
                        },
                        "return": {
                            "type": {
                                "types": [
                                    {
                                        "type": "Object"
                                    }
                                ],
                                "raw": "Object"
                            },
                            "description": "The decrypted object"
                        },
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@lotsof.sugar.shared.crypto.md5": {
                "id": "@lotsof.sugar.shared.crypto.md5",
                "name": "md5",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the md5 algorithm",
                "namespace": "@lotsof.sugar.shared.crypto",
                "status": "stable",
                "snippet": {
                    "label": "__md5.encrypt($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __md5 } from '@lotsof/sugar/crypto';\n__md5.encrypt('hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "md5.ts",
                "extension": "ts",
                "relPath": "src/shared/crypto/md5.ts",
                "children": {
                    "encrypt": {
                        "id": "s4ac7787e432691a98148698f2c45e6fb66ecd40724de239512e647434b8971be",
                        "name": "encrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to encrypt",
                                "defaultStr": ""
                            }
                        },
                        "return": {
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "description": "The encrypted string"
                        },
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "decrypt": {
                        "id": "s9893ce4e78964c19b9570c8ae76b5c4395195d06a5cd5278b2a96dc6df13cca0",
                        "name": "decrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to decrypt",
                                "defaultStr": ""
                            }
                        },
                        "return": {
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "description": "The decrypted message"
                        },
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@lotsof.sugar.shared.color.rgba2hsla": {
                "id": "@lotsof.sugar.shared.color.rgba2hsla",
                "name": "rgba2hsla",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "r": {
                        "name": "r",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                },
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Number|String|Object"
                        },
                        "description": "The red value between 0-255 or an object representing r, b, g, a or a string representing the rgba(...) color",
                        "defaultStr": ""
                    },
                    "g": {
                        "name": "g",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The green value between 0-255",
                        "defaultStr": ""
                    },
                    "b": {
                        "name": "b",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The blue value between 0-255",
                        "defaultStr": ""
                    },
                    "a": {
                        "name": "a",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The alpha value between 0-100|0-1",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "object"
                            }
                        ],
                        "raw": "object"
                    },
                    "description": "The hsl object representation"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "RGBA to HSL",
                "namespace": "@lotsof.sugar.shared.color",
                "status": "stable",
                "snippet": {
                    "label": "__rgbaToHsla($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __rgbaToHsla } from '@lotsof/sugar/color';\n__rgbaToHsla(10,20,50,10);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "rgbaToHsla.ts",
                "extension": "ts",
                "relPath": "src/shared/color/rgbaToHsla.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.color.rgba2hex": {
                "id": "@lotsof.sugar.shared.color.rgba2hex",
                "name": "rgba2hex",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "r": {
                        "name": "r",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                },
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Number|String|Object"
                        },
                        "description": "The red value between 0-255 or an object representing r, g, b, a or a string representing the rgba(...) color",
                        "defaultStr": ""
                    },
                    "g": {
                        "name": "g",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The green value between 0-255",
                        "defaultStr": ""
                    },
                    "b": {
                        "name": "b",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The blue value between 0-255",
                        "defaultStr": ""
                    },
                    "a": {
                        "name": "a",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The alpha value between 0-100|0-1",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "string"
                            }
                        ],
                        "raw": "string"
                    },
                    "description": "The hex string representation like #ff004f"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "RGBA to HEX",
                "namespace": "@lotsof.sugar.shared.color",
                "status": "stable",
                "snippet": {
                    "label": "__rgbaToHex($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __rgbaToHex } from '@lotsof/sugar/color';\n__rgbaToHex(10,20,30,10);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "rgbaToHex.ts",
                "extension": "ts",
                "relPath": "src/shared/color/rgbaToHex.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.color.parseRgba": {
                "id": "@lotsof.sugar.shared.color.parseRgba",
                "name": "parseRgba",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "rgbaString": {
                        "name": "rgbaString",
                        "type": {
                            "types": [
                                {
                                    "type": "string"
                                }
                            ],
                            "raw": "string"
                        },
                        "description": "The rgba string (rgba(r,g,b,a)) to parse",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "object"
                            }
                        ],
                        "raw": "object"
                    },
                    "description": "The rgba object representation"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse RGBA string and return an object",
                "namespace": "@lotsof.sugar.shared.color",
                "status": "stable",
                "snippet": {
                    "label": "__parseRgba($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __parseRgba } from '@lotsof/sugar/color';\n__parseRgba('rgba(20,10,100,20)');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseRgba.ts",
                "extension": "ts",
                "relPath": "src/shared/color/parseRgba.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.color.parseHsla": {
                "id": "@lotsof.sugar.shared.color.parseHsla",
                "name": "parseHsla",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "hslaString": {
                        "name": "hslaString",
                        "type": {
                            "types": [
                                {
                                    "type": "string"
                                }
                            ],
                            "raw": "string"
                        },
                        "description": "The hsl string (hsl(h,s,l)) to parse",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "object"
                            }
                        ],
                        "raw": "object"
                    },
                    "description": "The hsl object representation"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse HSL",
                "namespace": "@lotsof.sugar.shared.color",
                "status": "stable",
                "snippet": {
                    "label": "__parseHsla($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __parseHsla } from '@lotsof/sugar/color';\n__parseHsla('hsl(20,20,20)');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseHsla.ts",
                "extension": "ts",
                "relPath": "src/shared/color/parseHsla.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.color.parseColor": {
                "id": "@lotsof.sugar.shared.color.parseColor",
                "name": "parseColor",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "color": {
                        "name": "color",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The color to parse like (#ff0000 | rgba(...) | hsl(...) | hsv(...))",
                        "defaultStr": ""
                    },
                    "format": {
                        "name": "format",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The object format wanted. Can be \"rgba\" or \"hsla\"",
                        "default": "rgba",
                        "defaultStr": "'rgba'"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "The rgba representation of the passed color"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "namespace": "@lotsof.sugar.shared.color",
                "status": "stable",
                "snippet": {
                    "label": "__parseColor($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __parseColor } from '@lotsof/sugar/color';\n__parseColor('rgba(10,20,30,100)'); // => { r: 10, b: 20, b: 30, a: 100 }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseColor.ts",
                "extension": "ts",
                "relPath": "src/shared/color/parseColor.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.color.hslToRgba": {
                "id": "@lotsof.sugar.shared.color.hslToRgba",
                "name": "hslToRgba",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "h": {
                        "name": "h",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                },
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Number|String|Object"
                        },
                        "description": "The hue value between 0-360 an object representing h, s, l, (a) or a string representing the hsla(...) color",
                        "defaultStr": ""
                    },
                    "s": {
                        "name": "s",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The saturation value between 0-100|0-1",
                        "defaultStr": ""
                    },
                    "l": {
                        "name": "l",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The luminence value between 0-100|0-1",
                        "defaultStr": ""
                    },
                    "a": {
                        "name": "a",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The alpha value between 0-100|0-1",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "object"
                            }
                        ],
                        "raw": "object"
                    },
                    "description": "The rgba object representation"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "HSL to RGBA",
                "namespace": "@lotsof.sugar.shared.color",
                "status": "stable",
                "snippet": {
                    "label": "__hslaToRgba($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __hslToRgba } from '@lotsof/sugar/color';\n__hslToRgba(10,20,30);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "hslaToRgba.ts",
                "extension": "ts",
                "relPath": "src/shared/color/hslaToRgba.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.color.hslaToHexa": {
                "id": "@lotsof.sugar.shared.color.hslaToHexa",
                "name": "hslaToHexa",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "h": {
                        "name": "h",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                },
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Number|String|Object"
                        },
                        "description": "The hue value between 0-360 an object representing h, s, l, (a) or a string representing the hsla(...) color",
                        "defaultStr": ""
                    },
                    "s": {
                        "name": "s",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The saturation value between 0-100|0-1",
                        "defaultStr": ""
                    },
                    "l": {
                        "name": "l",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The luminence value between 0-100|0-1",
                        "defaultStr": ""
                    },
                    "a": {
                        "name": "a",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The alpha value between 0-100|0-1",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The hex string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "HSLA to HEX",
                "namespace": "@lotsof.sugar.shared.color",
                "status": "stable",
                "snippet": {
                    "label": "__hslaToHexa($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __hslaToHexa } from '@lotsof/sugar/color';\n__hslaToHexa(10,20,30,1);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "hslaToHexa.ts",
                "extension": "ts",
                "relPath": "src/shared/color/hslaToHexa.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.color.hslaToHex": {
                "id": "@lotsof.sugar.shared.color.hslaToHex",
                "name": "hslaToHex",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "h": {
                        "name": "h",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                },
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Number|String|Object"
                        },
                        "description": "The hue value between 0-360 an object representing h, s, l, (a) or a string representing the hsla(...) color",
                        "defaultStr": ""
                    },
                    "s": {
                        "name": "s",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The saturation value between 0-100|0-1",
                        "defaultStr": ""
                    },
                    "l": {
                        "name": "l",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The luminence value between 0-100|0-1",
                        "defaultStr": ""
                    },
                    "a": {
                        "name": "a",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The alpha value between 0-100|0-1",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The hex string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "HSLA to HEX",
                "namespace": "@lotsof.sugar.shared.color",
                "status": "stable",
                "snippet": {
                    "label": "__hslaToHex($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __hslaToHex } from '@lotsof/sugar/color';\n__hslaToHex(10,20,30);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "hslaToHex.ts",
                "extension": "ts",
                "relPath": "src/shared/color/hslaToHex.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.color.hexToRgba": {
                "id": "@lotsof.sugar.shared.color.hexToRgba",
                "name": "hexToRgba",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "hex": {
                        "name": "hex",
                        "type": {
                            "types": [
                                {
                                    "type": "string"
                                }
                            ],
                            "raw": "string"
                        },
                        "description": "The hex string to convert",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "object"
                            }
                        ],
                        "raw": "object"
                    },
                    "description": "The rgba object representation"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Hex to RGBA",
                "namespace": "@lotsof.sugar.shared.color",
                "status": "stable",
                "snippet": {
                    "label": "__hexToRgba($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __hexToRgba } from '@lotsof/sugar/color';\n__hexToRgba('#ff00ff');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "hexToRgba.ts",
                "extension": "ts",
                "relPath": "src/shared/color/hexToRgba.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.color.convert": {
                "id": "@lotsof.sugar.shared.color.convert",
                "name": "convert",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "input": {
                        "name": "input",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The input color to convert",
                        "defaultStr": ""
                    },
                    "format": {
                        "name": "format",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The format wanted",
                        "default": "rgba",
                        "defaultStr": "\"rgba\""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Mixed"
                            }
                        ],
                        "raw": "Mixed"
                    },
                    "description": "The converted color"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as input any color format like rgba Object, hsl Object, hsv Object, hex String, rgba String, hsl String or hsv String\nand convert it into the wanted format like \"rgba\", \"hsl\", \"hsv\", \"hex\", \"rgbaString\", \"hslString\" or \"hsvString\"",
                "namespace": "@lotsof.sugar.shared.color",
                "status": "stable",
                "snippet": {
                    "label": "__convert($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __convert } from '@lotsof/sugar/color';\n__convert('rgba(10,20,30,100)', 'rgba'); // => { r: 10, g: 20, b: 30, a: 100 }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "convert.ts",
                "extension": "ts",
                "relPath": "src/shared/color/convert.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.color.alphaToHex": {
                "id": "@lotsof.sugar.shared.color.alphaToHex",
                "name": "alphaToHex",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "alpha": {
                        "name": "alpha",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The alpha to convert to hex (0-1)",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The hex string"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Take alpha (0-1) and convert it to hex like \"FF\", \"80\", etc...",
                "namespace": "@lotsof.sugar.shared.color",
                "status": "stable",
                "snippet": {
                    "label": "__alphaToHex($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __alphaToHex } from '@lotsof/sugar/color';\n__alphaToHex(1); // FF"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "alphaToHex.ts",
                "extension": "ts",
                "relPath": "src/shared/color/alphaToHex.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.class.toPlainObject": {
                "id": "@lotsof.sugar.shared.class.toPlainObject",
                "name": "toPlainObject",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "instance": {
                        "name": "instance",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "Any class instance to transform into a plain object",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "A plain object version of the the class instance"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a instance as parameter and return a plain object of it",
                "namespace": "@lotsof.sugar.shared.class",
                "status": "stable",
                "snippet": {
                    "label": "__toPlainObject($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __toPlainObject } from '@lotsof/sugar/class';\nclass Coco {\n   constructor() {\n     this.hello = 'world';\n   }\n}\n__toPlainObject(new Coco()); // => { hello: 'world' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "toPlainObject.ts",
                "extension": "ts",
                "relPath": "src/shared/class/toPlainObject.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.class.methodExists": {
                "id": "@lotsof.sugar.shared.class.methodExists",
                "name": "methodExists",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "instance": {
                        "name": "instance",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The instance to check the methods on",
                        "defaultStr": ""
                    },
                    "...methods": {
                        "name": "...methods",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The methods to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            },
                            {
                                "type": "Array"
                            }
                        ],
                        "raw": "Boolean|Array"
                    },
                    "description": "Return true if all is ok, and an array of missing methods if not"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if one or more methods exists on a class instance",
                "namespace": "@lotsof.sugar.shared.class",
                "status": "stable",
                "snippet": {
                    "label": "__methodExists($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "class Coco {\n   hello() {}\n}\nimport { __methodExists } from '@lotsof/sugar/class';\nconst myInstance = new Coco();\n__methodExists(myInstance, 'hello', 'world'); // => ['world'];\n__methodExists(myInstance, 'hello'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "methodExists.ts",
                "extension": "ts",
                "relPath": "src/shared/class/methodExists.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.class.cloneClass": {
                "id": "@lotsof.sugar.shared.class.cloneClass",
                "name": "cloneClass",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "class": {
                        "name": "class",
                        "type": {
                            "types": [
                                {
                                    "type": "Class"
                                }
                            ],
                            "raw": "Class"
                        },
                        "description": "The class to clone",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Class"
                            }
                        ],
                        "raw": "Class"
                    },
                    "description": "A new class"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Clone ES6 Classes",
                "namespace": "@lotsof.sugar.shared.class",
                "status": "stable",
                "snippet": {
                    "label": "__cloneClass($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __cloneClass } from '@lotsof/sugar/class';\nconst NewClass = __cloneClass(class MyClass() {});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "cloneClass.ts",
                "extension": "ts",
                "relPath": "src/shared/class/cloneClass.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.array.unique": {
                "id": "@lotsof.sugar.shared.array.unique",
                "name": "unique",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "array": {
                        "name": "array",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The array to deduplicates",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array"
                            }
                        ],
                        "raw": "Array"
                    },
                    "description": "The deduplicated array"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take an array as parameter and return a new one\nwith all the duplicates values removed.",
                "namespace": "@lotsof.sugar.shared.array",
                "status": "stable",
                "snippet": {
                    "label": "__unique($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __unique } from '@lotsof/sugar/array';\n__unique(['hello','world','hello','world']); // => ['hello','world']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "unique.ts",
                "extension": "ts",
                "relPath": "src/shared/array/unique.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.array.splitEvery": {
                "id": "@lotsof.sugar.shared.array.splitEvery",
                "name": "splitEvery",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "array": {
                        "name": "array",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The array to split",
                        "defaultStr": ""
                    },
                    "every": {
                        "name": "every",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "Every how many items to split the array",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array"
                            }
                        ],
                        "raw": "Array"
                    },
                    "description": "An array of arrays splited"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Split an array every N items",
                "namespace": "@lotsof.sugar.shared.array",
                "status": "stable",
                "snippet": {
                    "label": "__splitEvery($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __splitEvery } from '@lotsof/sugar/array';\n__splitEvery([1,2,3,4,5,6,7,8,9], 3);\n// [[1,2,3],[4,5,6],[7,8,9]]"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "splitEvery.ts",
                "extension": "ts",
                "relPath": "src/shared/array/splitEvery.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.array.pickRandom": {
                "id": "@lotsof.sugar.shared.array.pickRandom",
                "name": "pickRandom",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "array": {
                        "name": "array",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The array from which to pick a random item",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Any"
                            }
                        ],
                        "raw": "Any"
                    },
                    "description": "A random array item"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Pick a random item in the passed array",
                "namespace": "@lotsof.sugar.shared.array",
                "status": "stable",
                "snippet": {
                    "label": "__pickRandom($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __pickRandom } from '@lotsof/sugar/array';\nconst array = ['hello','world'];\n__pickRandom(array); // => 'world'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "pickRandom.ts",
                "extension": "ts",
                "relPath": "src/shared/array/pickRandom.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.array.moveItem": {
                "id": "@lotsof.sugar.shared.array.moveItem",
                "name": "moveItem",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "array": {
                        "name": "array",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The array to process",
                        "defaultStr": ""
                    },
                    "from": {
                        "name": "from",
                        "type": {
                            "types": [
                                {
                                    "type": "any"
                                },
                                {
                                    "type": "integer"
                                }
                            ],
                            "raw": "any|integer"
                        },
                        "description": "Either the element itself that you want to move, or the index of the element you want to move",
                        "defaultStr": ""
                    },
                    "to": {
                        "name": "to",
                        "type": {
                            "types": [
                                {
                                    "type": "any"
                                },
                                {
                                    "type": "integer"
                                }
                            ],
                            "raw": "any|integer"
                        },
                        "description": "Either the element itself where you want to move the first one, or the index of the element you want to move your element to",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array"
                            }
                        ],
                        "raw": "Array"
                    },
                    "description": "The processed array"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to move an item to another place in the array",
                "namespace": "@lotsof.sugar.shared.array",
                "status": "stable",
                "snippet": {
                    "label": "__moveItem($1, $2, $3)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __moveItem } from '@lotsof/sugar/array';\nconst myArray = ['hello','world','something'];\n__moveItem(myArray, 0, 1); // ['world','hello','something']"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "moveItem.ts",
                "extension": "ts",
                "relPath": "src/shared/array/moveItem.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.array.keysLast": {
                "id": "@lotsof.sugar.shared.array.keysLast",
                "name": "keysLast",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "array": {
                        "name": "array",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The array to process",
                        "defaultStr": ""
                    },
                    "keys": {
                        "name": "keys",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The keys to end the array with",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array"
                            }
                        ],
                        "raw": "Array"
                    },
                    "description": "The processed array"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Make sure the passed array ends with the passed keys",
                "namespace": "@lotsof.sugar.shared.array",
                "status": "stable",
                "snippet": {
                    "label": "__keysLast($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __keysLast } from '@coffeekraken/sugar/array'\n__keysLast(['a','b','d','g','c'], ['d','g'])\n// ['a','b','c','d','g']"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "keysLast.ts",
                "extension": "ts",
                "relPath": "src/shared/array/keysLast.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.array.keysFirst": {
                "id": "@lotsof.sugar.shared.array.keysFirst",
                "name": "keysFirst",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "array": {
                        "name": "array",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The array to sort",
                        "defaultStr": ""
                    },
                    "keys": {
                        "name": "keys",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The keys to start the array with",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array"
                            }
                        ],
                        "raw": "Array"
                    },
                    "description": "The processed array"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Make sure the passed array start with the passed keys",
                "namespace": "@lotsof.sugar.shared.array",
                "status": "stable",
                "snippet": {
                    "label": "__keysFirst($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __keysFirst } from '@coffeekraken/sugar/array'\n__keysFirst(['a','b','d','g','c'], ['d','g'])\n// ['d','g','a','b','c']"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "keysFirst.ts",
                "extension": "ts",
                "relPath": "src/shared/array/keysFirst.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.array.intersection": {
                "id": "@lotsof.sugar.shared.array.intersection",
                "name": "intersection",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "...arrays": {
                        "name": "...arrays",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The arrays you want to compare",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Some settings to refine your comparaison process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array"
                            }
                        ],
                        "raw": "Array"
                    },
                    "description": "An array containing all the items that are present in all the passed arrays"
                },
                "setting": {
                    "references": {
                        "name": "references",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to use the references comparaison or not",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "hash": {
                        "name": "hash",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to allows transforming object etc in to hashes and compare this instead",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function take two arrays and return all the items that are the same.\nYou can specify if you want only comparing by reference for object, etc... or if\nyou want to transform items in hashes and compare that instead.",
                "namespace": "@lotsof.sugar.shared.array",
                "status": "stable",
                "snippet": {
                    "label": "__intersection($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __intersection } from '@lotsof/sugar/array';\n__intersection([1,2,3,4], [1,3,5]); // => [1,3]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "intersection.ts",
                "extension": "ts",
                "relPath": "src/shared/array/intersection.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.array.fromQuantifier": {
                "id": "@lotsof.sugar.shared.array.fromQuantifier",
                "name": "fromQuantifier",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "quantifier": {
                        "name": "quantifier",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "String|Number"
                        },
                        "description": "The quantifier to generate",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IFromQuantifierSettings"
                                }
                            ],
                            "raw": "IFromQuantifierSettings"
                        },
                        "description": "Some settings to configure your array generation",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Array"
                            }
                        ],
                        "raw": "Array"
                    },
                    "description": "The generated array"
                },
                "setting": {
                    "max": {
                        "name": "max",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The maximum wanted when using > and >= quantifiers",
                        "defaultStr": ""
                    },
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "A function that take the current index and that MUST return the value wanted in the generated array",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to generate an array from a certain passed quantifier like \"2\", \"<10\", \">10\", \"9-12\", etc...\nThis is useful to create arrays that are depending on user-friendly quantifier and it's used for example in the\ns-postcss-sugar-plugin for the `@s.lod(>2)` mixin.",
                "namespace": "@lotsof.sugar.shared.array",
                "status": "stable",
                "snippet": {
                    "label": "__fromQuantifier($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __fromQuantifier } from '@coffeekraken/sugar/array'\n__fromQuantifier(3); // => [0,1,2]\n__fromQuantifier('3-5'); // => [3,4,5]\n__fromQuantifier('3-6', {\n   value(i) => `c-${i}`\n}); // => ['c-3','c-4','c-5','c-6']"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "fromQuantifier.ts",
                "extension": "ts",
                "relPath": "src/shared/array/fromQuantifier.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.array.asyncForEach": {
                "id": "@lotsof.sugar.shared.array.asyncForEach",
                "name": "asyncForEach",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "array": {
                        "name": "array",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The array to loop on",
                        "defaultStr": ""
                    },
                    "asyncFn": {
                        "name": "asyncFn",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The async function to call on each items",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Allow to make some async foreach on your arrays",
                "namespace": "@lotsof.sugar.shared.array",
                "status": "stable",
                "snippet": {
                    "label": "__asyncForEach($1, $2)",
                    "code": "await __asyncForEach($1, (item, idx) => {\n     $2\n});"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __asyncForEach } from '@lotsof/sugar/array';\nconst waitFor = (ms) => new Promise(r => setTimeout(r, ms));\n__asyncForEach([0,1,2,3], async (item) => {\n   await waitWor(50);\n   console.log(item);\n});\n// 0\n// 1\n// 2\n// 3"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "asyncForEach.ts",
                "extension": "ts",
                "relPath": "src/shared/array/asyncForEach.ts",
                "children": {}
            },
            "@lotsof.sugar.node.string.uniqid": {
                "id": "@lotsof.sugar.node.string.uniqid",
                "name": "uniqid",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "A 8 bytes uniqid string"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Generate a uniqid string of 8 bytes. Work using the [uniqid](https://www.npmjs.com/package/uniqid) npm package under the hood.",
                "namespace": "@lotsof.sugar.node.string",
                "status": "stable",
                "snippet": {
                    "label": "__uniqid()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __uniqid } from '@lotsof/sugar/string';\nconsole.log(__uniqid()); // => 1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "uniqid.ts",
                "extension": "ts",
                "relPath": "src/node/string/uniqid.ts",
                "children": {}
            },
            "@lotsof.sugar.node.package.packageJsonSync": {
                "id": "@lotsof.sugar.node.package.packageJsonSync",
                "name": "packageJsonSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IPackageJsonSyncSettings"
                                }
                            ],
                            "raw": "IPackageJsonSyncSettings"
                        },
                        "description": "Some settings like cwd, etc...",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "cwd": {
                        "name": "cwd",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The working directory to start from",
                        "default": "/Users/olivierbossel/data/web/lotsof/monorepo/packages/sugar",
                        "defaultStr": "process.cwd()"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Returns the package.json file depending on the passed cwd.\nIt will go up the directories tree and get the first package.json found.",
                "namespace": "@lotsof.sugar.node.package",
                "status": "stable",
                "snippet": {
                    "label": "__packageJsonSync()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __packageJsonSync } from '@coffeekraken/sugar/package';\nconst root = __packageJsonSync();"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "packageJsonSync.ts",
                "extension": "ts",
                "relPath": "src/node/package/packageJsonSync.ts",
                "children": {}
            },
            "@lotsof.sugar.node.is.isSymlink": {
                "id": "@lotsof.sugar.node.is.isSymlink",
                "name": "isSymlink",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if is a sySlink, false if not"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed string path is a sySlink or not",
                "namespace": "@lotsof.sugar.node.is",
                "status": "stable",
                "snippet": {
                    "label": "__isSymlink($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isSymlink } from '@lotsof/sugar/is';\n__isSymlink('something/cool');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isSymlink.ts",
                "extension": "ts",
                "relPath": "src/node/is/isSymlink.ts",
                "children": {}
            },
            "@lotsof.sugar.node.is.isFfolder": {
                "id": "@lotsof.sugar.node.is.isFfolder",
                "name": "isFfolder",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if is a folder, false if not"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed string path is a folder or not",
                "namespace": "@lotsof.sugar.node.is",
                "status": "stable",
                "snippet": {
                    "label": "__isFolder($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isfolder } from '@lotsof/sugar/is';\n__isfolder('something/cool');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isFolder.ts",
                "extension": "ts",
                "relPath": "src/node/is/isFolder.ts",
                "children": {}
            },
            "@lotsof.sugar.node.is.isFile": {
                "id": "@lotsof.sugar.node.is.isFile",
                "name": "isFile",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if is a file, false if not"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed string path is a file or not",
                "namespace": "@lotsof.sugar.node.is",
                "status": "stable",
                "snippet": {
                    "label": "__isFile($1);"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isFile } from '@lotsof/sugar/is';\n__isFile('something/cool');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isFile.ts",
                "extension": "ts",
                "relPath": "src/node/is/isFile.ts",
                "children": {}
            },
            "@lotsof.sugar.node.is.isDirectory": {
                "id": "@lotsof.sugar.node.is.isDirectory",
                "name": "isDirectory",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if is a directory, false if not"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed string path is a directory or not",
                "namespace": "@lotsof.sugar.node.is",
                "status": "stable",
                "snippet": {
                    "label": "__isDirectory($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isDirectory } from '@lotsof/sugar/is';\n__isDirectory('something/cool');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isDirectory.ts",
                "extension": "ts",
                "relPath": "src/node/is/isDirectory.ts",
                "children": {}
            },
            "@lotsof.sugar.node.is.isCommandExists": {
                "id": "@lotsof.sugar.node.is.isCommandExists",
                "name": "isCommandExists",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "command": {
                        "name": "command",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The command to check like \"ls\", \"node\", etc...",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Promise"
                            }
                        ],
                        "raw": "Promise"
                    },
                    "description": "A promise fullfiled once the check has finished with true of false as value"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to check if a command exists on the system where the script is running",
                "namespace": "@lotsof.sugar.node.is",
                "status": "stable",
                "snippet": {
                    "label": "__isCommandExists($1)",
                    "code": "await __isCommandExists($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isCommandExists } from '@lotsof/sugar/is';\nawait  __isCommandExists('ls'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isCommandExists.ts",
                "extension": "ts",
                "relPath": "src/node/is/isCommandExists.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.writeTmpFileSync": {
                "id": "@lotsof.sugar.node.fs.writeTmpFileSync",
                "name": "writeTmpFileSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "data": {
                        "name": "data",
                        "type": {
                            "types": [
                                {
                                    "type": "Any"
                                }
                            ],
                            "raw": "Any"
                        },
                        "description": "The data to write in the file",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IWriteTmpFileSyncSettings"
                                }
                            ],
                            "raw": "IWriteTmpFileSyncSettings"
                        },
                        "description": "Some settings to customize your temp file creation",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Promise"
                            }
                        ],
                        "raw": "Promise"
                    },
                    "description": "A promise that will be resolved when the writeTmpFileSync is completed with the path to it"
                },
                "setting": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "A path relative to the temp folder to store your file",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Create a temporary file on the disk with the passed content and returns the path\nto it.",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__writeTmpFileSync($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __writeTmpFileSync } from '@lotsof/sugar/fs';\nconst path = __writeTmpFileSync('Hello World');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "writeTmpFileSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeTmpFileSync.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.writeTmpFile": {
                "id": "@lotsof.sugar.node.fs.writeTmpFile",
                "name": "writeTmpFile",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "data": {
                        "name": "data",
                        "type": {
                            "types": [
                                {
                                    "type": "Any"
                                }
                            ],
                            "raw": "Any"
                        },
                        "description": "The data to write in the file",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IWriteTmpFileSettings"
                                }
                            ],
                            "raw": "IWriteTmpFileSettings"
                        },
                        "description": "Some settings to customize your temp file creation",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Promise",
                                "of": [
                                    "String"
                                ]
                            }
                        ],
                        "raw": "Promise<String>"
                    },
                    "description": "A promise that will be resolved when the writeTmpFile is completed with the path to it"
                },
                "setting": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "A path relative to the temp folder to store your file",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Create a temporary file on the disk with the passed content and returns the path\nto it.",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__writeTmpFile($1, $2)",
                    "code": "await __writeTmpFile($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __writeTmpFile } from '@lotsof/sugar/fs';\n__writeTmpFile('Hello World').then((path) => {\n   // do something on complete...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "writeTmpFile.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeTmpFile.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.writeJsonSync": {
                "id": "@lotsof.sugar.node.fs.writeJsonSync",
                "name": "writeJsonSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file path to write",
                        "defaultStr": ""
                    },
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The object to write in the JSON file",
                        "defaultStr": ""
                    },
                    "options": {
                        "name": "options",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "options are what you'd pass to [fs.writeJsonSync()](https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback)",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Write a JSON file. If don't exist, will be created as well as the directory structure if needed... (sync)",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__writeJsonSync($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __writeJsonSync } from '@lotsof/sugar/fs';\n__writeJsonSync('my/cool/file.json', { hello: 'world' });"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "writeJsonSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeJsonSync.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.writeJson": {
                "id": "@lotsof.sugar.node.fs.writeJson",
                "name": "writeJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file path to write",
                        "defaultStr": ""
                    },
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The object to write in the JSON file",
                        "defaultStr": ""
                    },
                    "options": {
                        "name": "options",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "options are what you'd pass to [fs.writeJson()](https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback)",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Promise"
                            }
                        ],
                        "raw": "Promise"
                    },
                    "description": "A promise that will be resolved when the writeJson is completed"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Write a JSON file. If don't exist, will be created as well as the directory structure if needed... ( (async)",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__writeJson($1, $2)",
                    "code": "await _writeJson($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __writeJson } from '@lotsof/sugar/fs';\n__writeJson('my/cool/file.json', { hello: 'world' }).then(() => {\n   // do something on complete...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "writeJson.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeJson.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.writeFileSync": {
                "id": "@lotsof.sugar.node.fs.writeFileSync",
                "name": "writeFileSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file path to write",
                        "defaultStr": ""
                    },
                    "data": {
                        "name": "data",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The data to write in the file",
                        "defaultStr": ""
                    },
                    "options": {
                        "name": "options",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "options are what you'd pass to [fs.writeFileSync()](https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback)",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Write a file. If don't exist, will be created as well as the directory structure if needed... (sync)",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__writeFileSync($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __writeFileSync } from '@lotsof/sugar/fs';\n__writeFileSync('my/cool/file.txt', 'Hello World');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "writeFileSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeFileSync.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.writeFile": {
                "id": "@lotsof.sugar.node.fs.writeFile",
                "name": "writeFile",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file path to write",
                        "defaultStr": ""
                    },
                    "data": {
                        "name": "data",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The data to write in the file",
                        "defaultStr": ""
                    },
                    "options": {
                        "name": "options",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "options are what you'd pass to [fs.writeFile()](https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback)",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Promise"
                            }
                        ],
                        "raw": "Promise"
                    },
                    "description": "A promise that will be resolved when the writeFile is completed"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "CWrite a file. If don't exist, will be created as well as the directory structure if needed... ( (async)",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__writeFile($1, $2)",
                    "code": "await __writeFile($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __writeFile } from '@lotsof/sugar/fs';\n__writeFile('my/cool/file.txt', 'Hello World').then(() => {\n   // do something on complete...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "writeFile.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeFile.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.unlinkSync": {
                "id": "@lotsof.sugar.node.fs.unlinkSync",
                "name": "unlinkSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file/directory path to delete",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Removes a file or directory. The directory can have contents. If the path does not exist, silently does nothing. Like rm -rf (sync)",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__unlinkSync($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __unlinkSync } from '@lotsof/sugar/fs';\n __unlinkSync('my/cool/file.json');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "unlinkSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/unlinkSync.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.unlink": {
                "id": "@lotsof.sugar.node.fs.unlink",
                "name": "unlink",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file/directory path to delete",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Promise"
                            }
                        ],
                        "raw": "Promise"
                    },
                    "description": "A promise that will be resolved when the unlink is completed"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "unlinks a file or directory. The directory can have contents. If the path does not exist, silently does nothing. Like rm -rf (async)",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__unlink($1)",
                    "code": "await __unlink($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __unlink } from '@coffeekraken/sugar/fs';\nawait __unlink('my/cool/file.json').then(() => {\n   // do something on complete...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "unlink.ts",
                "extension": "ts",
                "relPath": "src/node/fs/unlink.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.removeSync": {
                "id": "@lotsof.sugar.node.fs.removeSync",
                "name": "removeSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file/directory path to delete",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Removes a file or directory. The directory can have contents. If the path does not exist, silently does nothing. Like rm -rf (sync)",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__removeSync($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __removeSync } from '@lotsof/sugar/fs';\n __removeSync('my/cool/file.json');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "removeSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/removeSync.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.remove": {
                "id": "@lotsof.sugar.node.fs.remove",
                "name": "remove",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file/directory path to delete",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Promise"
                            }
                        ],
                        "raw": "Promise"
                    },
                    "description": "A promise that will be resolved when the remove is completed"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Removes a file or directory. The directory can have contents. If the path does not exist, silently does nothing. Like rm -rf (async)",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__remove($1)",
                    "code": "await __remove($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __remove } from '@lotsof/sugar/fs';\nawait __remove('my/cool/file.json').then(() => {\n   // do something on complete...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "remove.ts",
                "extension": "ts",
                "relPath": "src/node/fs/remove.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.readXmlSync": {
                "id": "@lotsof.sugar.node.fs.readXmlSync",
                "name": "readXmlSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The xml file path to read",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "The readed json"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to read an xml file and get his content back as JSON",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__readXmlSync($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __readXmlSync } from '@lotsof/sugar/fs';\n__readXmlSync('my-cool-xml/file.xml');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "readXmlSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/readXmlSync.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.readJsonSync": {
                "id": "@lotsof.sugar.node.fs.readJsonSync",
                "name": "readJsonSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The json file path to read",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "The readed json"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to read a json file",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__readJsonSync($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __readJsonSync } from '@lotsof/sugar/fs';\n__readJsonSync('my-cool-json/file.json');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "readJsonSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/readJsonSync.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.readJson": {
                "id": "@lotsof.sugar.node.fs.readJson",
                "name": "readJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The json file path to read",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Object"
                            }
                        ],
                        "raw": "Object"
                    },
                    "description": "The readed json"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__readJson($1)",
                    "code": "await __readJson($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __readJson } from '@lotsof/sugar/fs';\nawait __readJson('my-cool-json/file.json');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "readJson.ts",
                "extension": "ts",
                "relPath": "src/node/fs/readJson.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.prependToFileSync": {
                "id": "@lotsof.sugar.node.fs.prependToFileSync",
                "name": "prependToFileSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file path you want to check. With or without an extension",
                        "defaultStr": ""
                    },
                    "content": {
                        "name": "content",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The content to add to the file",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to simply append a string to a file.",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__prependToFileSync($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __prependToFileSync } from '@lotsof/sugar/fs';\n__prependToFileSync('/my/cool/file.txt', 'Hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "prependToFileSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/prependToFileSync.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.pickOneSync": {
                "id": "@lotsof.sugar.node.fs.pickOneSync",
                "name": "pickOneSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "filesNames": {
                        "name": "filesNames",
                        "type": {
                            "types": [
                                {
                                    "type": "array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String[]"
                        },
                        "description": "The names of the files you want to check",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IPickOneSyncSettings"
                                }
                            ],
                            "raw": "IPickOneSyncSettings"
                        },
                        "description": "An object of settings to configure your research",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "SFile"
                            },
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "SFile|String"
                    },
                    "description": "Either an SFile instance if set in the config, or the path of the file found"
                },
                "setting": {
                    "cwd": {
                        "name": "cwd",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The current working directory to search in",
                        "default": "/Users/olivierbossel/data/web/lotsof/monorepo/packages/sugar",
                        "defaultStr": "process.cwd()"
                    },
                    "SFile": {
                        "name": "SFile",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Return an SFile instance if true, otherwise just a simple path string",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to specify multiple files to check and pick one of them",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__pickOneSync([$1])"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __pickOneSync } from '@lotsof/sugar/fs';\n__pickOneSync(['myCoolFile.json', 'myCoolFile2.json'], {});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "pickOneSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/pickOneSync.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.moveSync": {
                "id": "@lotsof.sugar.node.fs.moveSync",
                "name": "moveSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "src": {
                        "name": "src",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The source path to moveSync",
                        "defaultStr": ""
                    },
                    "dest": {
                        "name": "dest",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The destination path",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Moves a file or directory, even across devices (sync)",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__moveSync($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __moveSync } from '@lotsof/sugar/fs';\n__moveSync('my/cool/dir', 'another/place/for/directory');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "moveSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/moveSync.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.move": {
                "id": "@lotsof.sugar.node.fs.move",
                "name": "move",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "src": {
                        "name": "src",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The source path to move",
                        "defaultStr": ""
                    },
                    "dest": {
                        "name": "dest",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The destination path",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Promise"
                            }
                        ],
                        "raw": "Promise"
                    },
                    "description": "A promise that will be resolved once the file/directory has been moved..."
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Moves a file or directory, even across devices (async)",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__move($1, $2)",
                    "code": "await __move($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __move } from '@lotsof/sugar/fs';\nawait __move('my/cool/dir', 'another/place/for/directory').then(() => {\n   // do something...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "move.ts",
                "extension": "ts",
                "relPath": "src/node/fs/move.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.isPath": {
                "id": "@lotsof.sugar.node.fs.isPath",
                "name": "isPath",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path to check",
                        "defaultStr": ""
                    },
                    "checkExistence": {
                        "name": "checkExistence",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to check that the passed path actually exist",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if the path is valide, false if not"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed string is a valid path or not",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__isPath($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isPath } from '@lotsof/sugar/fs';\n__isPath('hello/world'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isPath.ts",
                "extension": "ts",
                "relPath": "src/node/fs/isPath.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.grabFirstExistingSync": {
                "id": "@lotsof.sugar.node.fs.grabFirstExistingSync",
                "name": "grabFirstExistingSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "paths": {
                        "name": "paths",
                        "type": {
                            "types": [
                                {
                                    "type": "array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String[]"
                        },
                        "description": "The paths to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The first existing path"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check every passed paths and return the first existing one.",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__gradFirst"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __grabFirstExistinSync } from '@lotsof/sugar/fs';\n__grabFirstExisting([\n 'file/1.txt',\n 'file/2.txt\n]); // => 'file/2.txt'\n'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "grabFirstExistingSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/grabFirstExistingSync.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.folderSize": {
                "id": "@lotsof.sugar.node.fs.folderSize",
                "name": "folderSize",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "folderPath": {
                        "name": "folderPath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The folder path to calculate the size",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Promise"
                            }
                        ],
                        "raw": "Promise"
                    },
                    "description": "A promise that will be resolved once the folder size has been calculated"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__folderSize($1)",
                    "code": "await __folderSize($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __folderSize } from '@lotsof/sugar/fs';\nawait __folderSize('my/cool/folder');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "folderSize.ts",
                "extension": "ts",
                "relPath": "src/node/fs/folderSize.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.folderPath": {
                "id": "@lotsof.sugar.node.fs.folderPath",
                "name": "folderPath",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file path to get folder path from",
                        "defaultStr": ""
                    },
                    "checkExistence": {
                        "name": "checkExistence",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to check the file existence before",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The folder path or '' if not exists"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function returns you the folder path of the file path passed.\nYou can tell the function to check for file existence before getting\nthe folder path with the second parameter.",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__folderPath($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __folderPath } from '@lotsof/sugar/fs';\n__folderPath('my/cool/path.js'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "folderPath.ts",
                "extension": "ts",
                "relPath": "src/node/fs/folderPath.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.folderHashSync": {
                "id": "@lotsof.sugar.node.fs.folderHashSync",
                "name": "folderHashSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "folderPath": {
                        "name": "folderPath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The folder path you want to get the hash back",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IFolderHashSettings"
                                }
                            ],
                            "raw": "IFolderHashSettings"
                        },
                        "description": "Some settings to configure your hash generation process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The calculated folder hash"
                },
                "setting": {
                    "recursive": {
                        "name": "recursive",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to generate a hash using also the children or not",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "algo": {
                        "name": "algo",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The algorithm to use",
                        "default": "sha356",
                        "defaultStr": "'sha356'"
                    },
                    "digest": {
                        "name": "digest",
                        "type": {
                            "types": [
                                {
                                    "type": "BinaryToTextEncoding"
                                }
                            ],
                            "raw": "BinaryToTextEncoding"
                        },
                        "description": "How to digest the hash",
                        "default": "base64",
                        "defaultStr": "'base64'"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get back an integrity hash for the passed folder.\nThis mean that if a folder returns the same integrity hash twice, the folder or files in it\nhas not been updated...",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__folderHashSync($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __folderHashSync } from '@lotsof/sugar/fs';\n__folderHashSync('my/cool/folder'); // => YZOrKDx9LCLd8X39PoFTflXGpRU=,"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "folderHashSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/folderHashSync.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.filename": {
                "id": "@lotsof.sugar.node.fs.filename",
                "name": "filename",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path to take the filename from",
                        "defaultStr": ""
                    },
                    "withExtension": {
                        "name": "withExtension",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Tell if we want the filename with or without the extension",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The requested filename"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the filename from the passed path with or without the extension",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__filename($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __filename } from '@lotsof/sugar/fs';\n__filename('hello/world.js'); // => world.js"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "filename.ts",
                "extension": "ts",
                "relPath": "src/node/fs/filename.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.fileHashSync": {
                "id": "@lotsof.sugar.node.fs.fileHashSync",
                "name": "fileHashSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "filePath": {
                        "name": "filePath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The folder path you want to get the hash back",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IFileHashSettings"
                                }
                            ],
                            "raw": "IFileHashSettings"
                        },
                        "description": "Some settings to configure your hash generation process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The calculated folder hash"
                },
                "setting": {
                    "algo": {
                        "name": "algo",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The algorithm to use",
                        "default": "sha356",
                        "defaultStr": "'sha356'"
                    },
                    "digest": {
                        "name": "digest",
                        "type": {
                            "types": [
                                {
                                    "type": "BinaryToTextEncoding"
                                }
                            ],
                            "raw": "BinaryToTextEncoding"
                        },
                        "description": "How to digest the hash",
                        "default": "base64",
                        "defaultStr": "'base64'"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get back an integrity hash for the passed file.\nThis mean that if a file returns the same integrity hash twice, the folder or files in it\nhas not been updated...",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__fileHashSync($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __fileHashSync } from '@lotsof/sugar/fs';\n__fileHashSync('my/cool/folder'); // => YZOrKDx9LCLd8X39PoFTflXGpRU=,"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "fileHashSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/fileHashSync.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.extension": {
                "id": "@lotsof.sugar.node.fs.extension",
                "name": "extension",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file path to get the extension from",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The file extension"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the passed file path extension",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__extension($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __extension } from '@lotsof/sugar/fs';\n__extension('hello/world.jpg'); // => jpg"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "extension.ts",
                "extension": "ts",
                "relPath": "src/node/fs/extension.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.existsSync": {
                "id": "@lotsof.sugar.node.fs.existsSync",
                "name": "existsSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path you want to check",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IExistsSettings"
                                }
                            ],
                            "raw": "IExistsSettings"
                        },
                        "description": "Some settings for what you want to take care of",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if exists, false if not"
                },
                "setting": {
                    "directory": {
                        "name": "directory",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to take care of directories",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "file": {
                        "name": "file",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to take care of files",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "symlink": {
                        "name": "symlink",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to take care of symlinks",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply check if the path passed exists.\nYou can specify what you want to take care of using the settings object",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__existsSync($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __existsSync } from '@lotsof/sugar/fs';\n__existsSync('/something/cool.txt'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "existsSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/existsSync.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.exists": {
                "id": "@lotsof.sugar.node.fs.exists",
                "name": "exists",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path you want to check",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IExistsSettings"
                                }
                            ],
                            "raw": "IExistsSettings"
                        },
                        "description": "Some settings for what you want to take care of",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Boolean"
                            }
                        ],
                        "raw": "Boolean"
                    },
                    "description": "true if exists, false if not"
                },
                "setting": {
                    "directory": {
                        "name": "directory",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to take care of directories",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "file": {
                        "name": "file",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to take care of files",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "symlink": {
                        "name": "symlink",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to take care of symlinks",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply check if the path passed exists.\nYou can specify what you want to take care of using the settings object",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__exists($1)",
                    "code": "await __exists($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __exists } from '@lotsof/sugar/fs';\n __exists('/something/cool.txt'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "exists.ts",
                "extension": "ts",
                "relPath": "src/node/fs/exists.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.ensureFileSync": {
                "id": "@lotsof.sugar.node.fs.ensureFileSync",
                "name": "ensureFileSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "filePath": {
                        "name": "filePath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file to ensure that it exists...",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ensure that the passed file exists. If not, will be created... (async)",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__ensureFileSync($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __ensureFileSync } from '@lotsof/sugar/fs';\n__ensureFileSync('my/cool/file.jpg');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ensureFileSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/ensureFileSync.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.ensureFile": {
                "id": "@lotsof.sugar.node.fs.ensureFile",
                "name": "ensureFile",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "filePath": {
                        "name": "filePath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file to ensure that it exists...",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Promise"
                            }
                        ],
                        "raw": "Promise"
                    },
                    "description": "A promise that will be resolved once the file has been created if needed..."
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ensure that the passed file exists. If not, it will be created... (async)",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__ensureFile($1)",
                    "code": "await __ensureFile($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __ensureFile } from '@lotsof/sugar/fs';\nawait __ensureFile('my/cool/file.jpg').then(() => {\n   // do something...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ensureFile.ts",
                "extension": "ts",
                "relPath": "src/node/fs/ensureFile.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.ensureDirSync": {
                "id": "@lotsof.sugar.node.fs.ensureDirSync",
                "name": "ensureDirSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "dir": {
                        "name": "dir",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The directory to ensure that it exists...",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Promise"
                            }
                        ],
                        "raw": "Promise"
                    },
                    "description": "A promise that will be resolved once the directory has been created if needed..."
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ensure that the passed directory exists. If not, will be created recursively... (sync)",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__ensureDirSync($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __ensureDirSync } from '@lotsof/sugar/fs';\n__ensureDirSync('my/cool/dir');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ensureDirSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/ensureDirSync.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.ensureDir": {
                "id": "@lotsof.sugar.node.fs.ensureDir",
                "name": "ensureDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "dir": {
                        "name": "dir",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The directory to ensure that it exists...",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Promise"
                            }
                        ],
                        "raw": "Promise"
                    },
                    "description": "A promise that will be resolved once the directory has been created if needed..."
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ensure that the passed directory exists. If not, will be created recursively... (async)",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__ensureDir($1)",
                    "code": "await __ensureDir($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __ensureDir } from '@lotsof/sugar/fs';\n __ensureDir('my/cool/dir').then(() => {\n   // do something...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ensureDir.ts",
                "extension": "ts",
                "relPath": "src/node/fs/ensureDir.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.emptyDirSync": {
                "id": "@lotsof.sugar.node.fs.emptyDirSync",
                "name": "emptyDirSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "dir": {
                        "name": "dir",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The directory path to empty",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Empty a directory (sync)",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__emptyDirSync($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __emptyDirSync } from '@coffeekraken/sugar/fs';\n__emptyDirSync('my/cool/directory');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "emptyDirSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/emptyDirSync.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.emptyDir": {
                "id": "@lotsof.sugar.node.fs.emptyDir",
                "name": "emptyDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "dir": {
                        "name": "dir",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The directory path to empty",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Promise"
                            }
                        ],
                        "raw": "Promise"
                    },
                    "description": "A promise that will be resolved once the directory has been cleaned"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Empty a directory (async)",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__emptyDir($1)",
                    "code": "await __emptyDir($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __emptyDir } from '@coffeekraken/sugar/fs';\nawait __emptyDir('my/cool/directory').then(() => {\n   // do something...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "emptyDir.ts",
                "extension": "ts",
                "relPath": "src/node/fs/emptyDir.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.dirname": {
                "id": "@lotsof.sugar.node.fs.dirname",
                "name": "dirname",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The dirname path"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the dirname the same as the __dirname cjs variable.\nThe only difference is that it's a function and you need to pass the \"import\" variable\nfrom the filename in which you use this...",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__dirname()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __dirname } from '@coffeekraken/sugar/fs';\n__dirname();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "dirname.ts",
                "extension": "ts",
                "relPath": "src/node/fs/dirname.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.copySync": {
                "id": "@lotsof.sugar.node.fs.copySync",
                "name": "copySync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "src": {
                        "name": "src",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The source path to copy",
                        "defaultStr": ""
                    },
                    "dest": {
                        "name": "dest",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The destination path",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Copy a file or directory (sync)",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__copySync($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __copySync } from '@coffeekraken/sugar/fs';\n __copySync('my/cool/file.jpg', 'my/new/file.jpg');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "copySync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/copySync.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.checkPathWithMultipleExtensions": {
                "id": "@lotsof.sugar.node.fs.checkPathWithMultipleExtensions",
                "name": "checkPathWithMultipleExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file path you want to check. With or without an extension",
                        "defaultStr": ""
                    },
                    "extensions": {
                        "name": "extensions",
                        "type": {
                            "types": [
                                {
                                    "type": "Array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "Array<String>"
                        },
                        "description": "The extensions (without the dot) you want to check",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            },
                            {
                                "type": "undefined"
                            }
                        ],
                        "raw": "String|undefined"
                    },
                    "description": "The first valid path founded, or undefined"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a path and some extensions to check if a file\nexists with one of these particular extensions.\nIf a file exists, the function return the path with the first extensions that matches",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__checkPathWithMultipleExtensions($1, $2)",
                    "code": "__checkPathWithMultipleExtensions($1, [\n    $2\n])"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __checkPathWithMultipleExtensions } from '@lotsof/sugar/fs';\n__checkPathWithMultipleExtensions('/my/cool/file.txt', ['txt','js','css']);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "checkPathWithMultipleExtensions.ts",
                "extension": "ts",
                "relPath": "src/node/fs/checkPathWithMultipleExtensions.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.chdir": {
                "id": "@lotsof.sugar.node.fs.chdir",
                "name": "chdir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The folder path you want to go to",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to change the process working directory.\nIf you make use of the `__spawn` sugar function, it will also change\nthe directory of the parent process if you call this function in a childProcess.",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__chdir($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __chdir } from '@lotsof/sugar/fs';\n__chdir('/my/cool/file.txt', 'Hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "chdir.ts",
                "extension": "ts",
                "relPath": "src/node/fs/chdir.ts",
                "children": {}
            },
            "@lotsof.sugar.node.fs.appendToFileSync": {
                "id": "@lotsof.sugar.node.fs.appendToFileSync",
                "name": "appendToFileSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file path you want to check. With or without an extension",
                        "defaultStr": ""
                    },
                    "content": {
                        "name": "content",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The content to add to the file",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to simply append a string to a file.",
                "namespace": "@lotsof.sugar.node.fs",
                "status": "stable",
                "snippet": {
                    "label": "__appendToFileSync($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __appendToFileSync } from '@coffeekraken/sugar/fs';\n__appendToFileSync('/my/cool/file.txt', 'Hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "appendToFileSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/appendToFileSync.ts",
                "children": {}
            },
            "@lotsof.sugar.shared.crypto.sha512": {
                "id": "@lotsof.sugar.shared.crypto.sha512",
                "name": "sha512",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the sha512 algorithm",
                "namespace": "@lotsof.sugar.shared.crypto",
                "status": "stable",
                "snippet": {
                    "label": "__sha512.encrypt($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __sha512 } from '@coffeekraken/sugar/crypto';\n__sha512.encrypt('hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sha512.ts",
                "extension": "ts",
                "relPath": "src/node/crypto/sha512.ts",
                "children": {
                    "encrypt": {
                        "id": "s4ac7787e432691a98148698f2c45e6fb66ecd40724de239512e647434b8971be",
                        "name": "encrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to encrypt",
                                "defaultStr": ""
                            }
                        },
                        "return": {
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "description": "The encrypted string"
                        },
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "decrypt": {
                        "id": "s9893ce4e78964c19b9570c8ae76b5c4395195d06a5cd5278b2a96dc6df13cca0",
                        "name": "decrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to decrypt",
                                "defaultStr": ""
                            }
                        },
                        "return": {
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "description": "The decrypted message"
                        },
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@lotsof.sugar.shared.crypto.sha256": {
                "id": "@lotsof.sugar.shared.crypto.sha256",
                "name": "sha256",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the sha256 algorithm",
                "namespace": "@lotsof.sugar.shared.crypto",
                "status": "stable",
                "snippet": {
                    "label": "__sha256.encrypt($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __sha256 } from '@coffeekraken/sugar/crypto';\n__sha256.encrypt('hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sha256.ts",
                "extension": "ts",
                "relPath": "src/node/crypto/sha256.ts",
                "children": {
                    "encrypt": {
                        "id": "s4ac7787e432691a98148698f2c45e6fb66ecd40724de239512e647434b8971be",
                        "name": "encrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to encrypt",
                                "defaultStr": ""
                            }
                        },
                        "return": {
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "description": "The encrypted string"
                        },
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "decrypt": {
                        "id": "s9893ce4e78964c19b9570c8ae76b5c4395195d06a5cd5278b2a96dc6df13cca0",
                        "name": "decrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to decrypt",
                                "defaultStr": ""
                            }
                        },
                        "return": {
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "description": "The decrypted message"
                        },
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@lotsof.sugar.node.crypto.md5": {
                "id": "@lotsof.sugar.node.crypto.md5",
                "name": "md5",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the md5 algorithm",
                "namespace": "@lotsof.sugar.node.crypto",
                "status": "stable",
                "snippet": {
                    "label": "__md5.encrypt($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __md5 } from '@coffeekraken/sugar/crypto';\n__md5.encrypt('hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "md5.ts",
                "extension": "ts",
                "relPath": "src/node/crypto/md5.ts",
                "children": {
                    "encrypt": {
                        "id": "s4ac7787e432691a98148698f2c45e6fb66ecd40724de239512e647434b8971be",
                        "name": "encrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to encrypt",
                                "defaultStr": ""
                            }
                        },
                        "return": {
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "description": "The encrypted string"
                        },
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "decrypt": {
                        "id": "s9893ce4e78964c19b9570c8ae76b5c4395195d06a5cd5278b2a96dc6df13cca0",
                        "name": "decrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to decrypt",
                                "defaultStr": ""
                            }
                        },
                        "return": {
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "description": "The decrypted message"
                        },
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@lotsof.sugar.js.crypto.base64": {
                "id": "@lotsof.sugar.js.crypto.base64",
                "name": "base64",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the base64 algorithm",
                "namespace": "@lotsof.sugar.js.crypto",
                "status": "stable",
                "snippet": {
                    "label": "__base64.encrypt($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __base64 } from '@coffeekraken/sugar/crypto';\n__base64.encrypt('hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "base64.ts",
                "extension": "ts",
                "relPath": "src/node/crypto/base64.ts",
                "children": {
                    "encrypt": {
                        "id": "sc783e86de6e337100507b99c3a4aaed0943ed1cc305ad66fedeed75c6bca8725",
                        "name": "encrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to encrypt",
                                "defaultStr": ""
                            }
                        },
                        "return": {
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "description": "The encrypted message"
                        },
                        "description": "Encrypt",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "decrypt": {
                        "id": "s62623d72c1185072541b07dbefdb419ac3938bd540e91c218bb074c7fbe6d4ba",
                        "name": "decrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to decrypt",
                                "defaultStr": ""
                            }
                        },
                        "return": {
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "description": "The decrypted message"
                        },
                        "description": "Decrypt",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@lotsof.sugar.node.crypto.aes": {
                "id": "@lotsof.sugar.node.crypto.aes",
                "name": "aes",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the aes algorithm",
                "namespace": "@lotsof.sugar.node.crypto",
                "status": "stable",
                "snippet": {
                    "label": "__aes.encrypt($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __aes } from '@lotsof/sugar/crypto';\n__aes.encrypt('hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "aes.ts",
                "extension": "ts",
                "relPath": "src/node/crypto/aes.ts",
                "children": {
                    "encrypt": {
                        "id": "s8e02b1eccead6154d6ede96020dfa837a386d1557ebd340a6adf847f344f2972",
                        "name": "encrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to encrypt",
                                "defaultStr": ""
                            },
                            "key": {
                                "name": "key",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The secret key to encrypt",
                                "default": "coffeekraken.sugar.crypto.aes",
                                "defaultStr": "'coffeekraken.sugar.crypto.aes'"
                            }
                        },
                        "return": {
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "description": "The encrypted message"
                        },
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "decrypt": {
                        "id": "s5566da547676bfb5910700a8fd20e770ef975a474d31a5729ee2b71651fecd8d",
                        "name": "decrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to decrypt",
                                "defaultStr": ""
                            },
                            "key": {
                                "name": "key",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The secret key to decrypt",
                                "default": "coffeekraken.sugar.crypto.aes",
                                "defaultStr": "'coffeekraken.sugar.crypto.aes'"
                            }
                        },
                        "return": {
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "description": "The decrypted message"
                        },
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@lotsof.sugar.node.console.tagsMap": {
                "id": "@lotsof.sugar.node.console.tagsMap",
                "name": "tagsMap",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "namespace": "@lotsof.sugar.node.console",
                "status": "stable",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "tagsMap.ts",
                "extension": "ts",
                "relPath": "src/node/console/tagsMap.ts",
                "children": {}
            },
            "@lotsof.sugar.node.console.parseHtml": {
                "id": "@lotsof.sugar.node.console.parseHtml",
                "name": "parseHtml",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "message": {
                        "name": "message",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "String|Array"
                        },
                        "description": "The message to format of an array of messages to format",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The formated message"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse the simple html tags to format the console message",
                "namespace": "@lotsof.sugar.node.console",
                "status": "stable",
                "snippet": {
                    "label": "__parseHtml($1)"
                },
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseHtml.ts",
                "extension": "ts",
                "relPath": "src/node/console/parseHtml.ts",
                "children": {}
            },
            "@lotsof.sugar.node.clipboard.readText": {
                "id": "@lotsof.sugar.node.clipboard.readText",
                "name": "readText",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The text to read"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Simple function to read things from the system clipboard.\nThis is using https://www.npmjs.com/package/clipboardy under the hood.",
                "namespace": "@lotsof.sugar.node.clipboard",
                "status": "stable",
                "snippet": {
                    "label": "__read()"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __copy, __read } from '@lotsof/sugar/clipboard';\n__copy('Hello world');\n__read(); // => Hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "readText.ts",
                "extension": "ts",
                "relPath": "src/node/clipboard/readText.ts",
                "children": {}
            },
            "@lotsof.sugar.node.clipboard.copyText": {
                "id": "@lotsof.sugar.node.clipboard.copyText",
                "name": "copyText",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The text to copy",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The text that has been copied"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Simple function to copy things into the system clipboard.\nThis is using https://www.npmjs.com/package/clipboardy under the hood.",
                "namespace": "@lotsof.sugar.node.clipboard",
                "status": "stable",
                "snippet": {
                    "label": "__copyText($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __copyText } from '@lotsof/sugar/clipboard';\n__copyText('Hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "copyText.ts",
                "extension": "ts",
                "relPath": "src/node/clipboard/copyText.ts",
                "children": {}
            },
            "@lotsof.sugar.js.crypto.md5": {
                "id": "@lotsof.sugar.js.crypto.md5",
                "name": "md5",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the md5 algorithm",
                "namespace": "@lotsof.sugar.js.crypto",
                "status": "stable",
                "snippet": {
                    "label": "__md5.encrypt($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __md5 } from '@coffeekraken/sugar/crypto';\n__md5.encrypt('hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "md5.ts",
                "extension": "ts",
                "relPath": "src/js/crypto/md5.ts",
                "children": {
                    "encrypt": {
                        "id": "s4ac7787e432691a98148698f2c45e6fb66ecd40724de239512e647434b8971be",
                        "name": "encrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to encrypt",
                                "defaultStr": ""
                            }
                        },
                        "return": {
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "description": "The encrypted string"
                        },
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "decrypt": {
                        "id": "s9893ce4e78964c19b9570c8ae76b5c4395195d06a5cd5278b2a96dc6df13cca0",
                        "name": "decrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to decrypt",
                                "defaultStr": ""
                            }
                        },
                        "return": {
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "description": "The decrypted message"
                        },
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@lotsof.sugar.js.cookie.setCookie": {
                "id": "@lotsof.sugar.js.cookie.setCookie",
                "name": "setCookie",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "name": {
                        "name": "name",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The name of the cookie to set",
                        "defaultStr": ""
                    },
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Any"
                                }
                            ],
                            "raw": "Any"
                        },
                        "description": "The cookie value to set",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial",
                                    "of": [
                                        "ISetCookieSettings"
                                    ]
                                }
                            ],
                            "raw": "Partial<ISetCookieSettings>"
                        },
                        "description": "Some settings to configure your cookie",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path of the cookie to store",
                        "default": "/",
                        "defaultStr": "\"/\""
                    },
                    "domain": {
                        "name": "domain",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The domain on which to store the cookie",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "expires": {
                        "name": "expires",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The date when the cookie expires",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "max-age": {
                        "name": "max-age",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The number of seconds until the cookie expires",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "secure": {
                        "name": "secure",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if the cookie is available only on HTTPS or not",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "samesite": {
                        "name": "samesite",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                },
                                {
                                    "type": "'strict'"
                                },
                                {
                                    "type": "'lax'"
                                }
                            ],
                            "raw": "Boolean | 'strict' | 'lax'"
                        },
                        "description": "Controls whether or not a cookie is sent with cross-site requests, providing some protection against cross-site request forgery attacks (CSRF)",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "httpOnly": {
                        "name": "httpOnly",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Forbids JavaScript from accessing the cookie, for example, through the Document.cookie property.",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Set a cookie",
                "namespace": "@lotsof.sugar.js.cookie",
                "status": "stable",
                "snippet": {
                    "label": "__setCookie($1, $2)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __setCookie } from '@lotsof/sugar/cookie';\n__setCookie('myCookie', 'hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "setCookie.ts",
                "extension": "ts",
                "relPath": "src/js/cookie/setCookie.ts",
                "children": {}
            },
            "@lotsof.sugar.js.cookie.getCookie": {
                "id": "@lotsof.sugar.js.cookie.getCookie",
                "name": "getCookie",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "name": {
                        "name": "name",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The cookie name to get",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "any"
                            }
                        ],
                        "raw": "any"
                    },
                    "description": "The cookie value"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get a cookie value",
                "namespace": "@lotsof.sugar.js.cookie",
                "status": "stable",
                "snippet": {
                    "label": "__getCookie($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getCookie } from '@lotsof/sugar/cookie';\n__getCookie('myCookie');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getCookie.ts",
                "extension": "ts",
                "relPath": "src/js/cookie/getCookie.ts",
                "children": {}
            },
            "@lotsof.sugar.js.cookie.deleteCookie": {
                "id": "@lotsof.sugar.js.cookie.deleteCookie",
                "name": "deleteCookie",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "name": {
                        "name": "name",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The cookie name to delete",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "any"
                            }
                        ],
                        "raw": "any"
                    },
                    "description": "The cookie value"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Delete a cookie",
                "namespace": "@lotsof.sugar.js.cookie",
                "status": "stable",
                "snippet": {
                    "label": "__deleteCookie($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __deleteCookie } from '@lotsof/sugar/cookie';\n__deleteCookie('myCookie');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deleteCookie.ts",
                "extension": "ts",
                "relPath": "src/js/cookie/deleteCookie.ts",
                "children": {}
            },
            "@lotsof.sugar.js.clipboard.readText": {
                "id": "@lotsof.sugar.js.clipboard.readText",
                "name": "readText",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Promise"
                            }
                        ],
                        "raw": "Promise"
                    },
                    "description": "A promise fullfilled when the content has been read correctly"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to read the content of the clipboard",
                "namespace": "@lotsof.sugar.js.clipboard",
                "status": "stable",
                "snippet": {
                    "label": "__readText($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __copyText, __readText } from '@lotsof/sugar/clipboard';\nawait __readText();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "readText.ts",
                "extension": "ts",
                "relPath": "src/js/clipboard/readText.ts",
                "children": {}
            },
            "@lotsof.sugar.js.clipboard.readFile": {
                "id": "@lotsof.sugar.js.clipboard.readFile",
                "name": "readFile",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Promise"
                            }
                        ],
                        "raw": "Promise"
                    },
                    "description": "A promise fullfilled when the content has been read correctly"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to read the file copied to clipboard",
                "namespace": "@lotsof.sugar.js.clipboard",
                "status": "stable",
                "snippet": {
                    "label": "__readFile($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __readFile } from '@lotsof/sugar/clipboard';\nawait __readFile();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "readFile.ts",
                "extension": "ts",
                "relPath": "src/js/clipboard/readFile.ts",
                "children": {}
            },
            "@lotsof.sugar.js.clipboard.copyText": {
                "id": "@lotsof.sugar.js.clipboard.copyText",
                "name": "copyText",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The text to copy",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Promise"
                            }
                        ],
                        "raw": "Promise"
                    },
                    "description": "A promise fullfilled when the copy has been made correctly"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to copy to the clipboard the passed text",
                "namespace": "@lotsof.sugar.js.clipboard",
                "status": "stable",
                "snippet": {
                    "label": "__copy($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __copy } from '@lotsof/sugar/clipboard';\n__copy('Hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "copyText.ts",
                "extension": "ts",
                "relPath": "src/js/clipboard/copyText.ts",
                "children": {}
            },
            "@lotsof.sugar.js.clipboard.copyFile": {
                "id": "@lotsof.sugar.js.clipboard.copyFile",
                "name": "copyFile",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "url": {
                        "name": "url",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file url copy to the clipboard",
                        "defaultStr": ""
                    }
                },
                "return": {
                    "type": {
                        "types": [
                            {
                                "type": "Promise"
                            }
                        ],
                        "raw": "Promise"
                    },
                    "description": "A promise fullfilled when the copy has been made correctly"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to copy to the clipboard the passed file path/url",
                "namespace": "@lotsof.sugar.js.clipboard",
                "status": "stable",
                "snippet": {
                    "label": "__copyFile($1)"
                },
                "example": [
                    {
                        "language": "js",
                        "code": "import { __copyFile } from '@lotsof/sugar/clipboard';\n__copyFile('https://www.google.com/favicon.ico');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "copyFile.ts",
                "extension": "ts",
                "relPath": "src/js/clipboard/copyFile.ts",
                "children": {}
            }
        }
    }
}